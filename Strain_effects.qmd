---
title: "Investigating strain and developmental stage effects"
author: "Selcan Aydin"
date: "`r Sys.Date()`"
format: 
  html:
      embed-resources: true
      standalone: true
include-in-header:
  - text: |
      <style>
      .panel-tabset > .nav-tabs,
      .panel-tabset > .tab-content {
        border: none;
      }
      </style>
code-fold: true
toc: true
toc-depth: 5
toc-expand: true
editor: 
  markdown: 
    wrap: sentence
comments:
  hypothesis: 
    theme: clean
---

```{r setup}
#| message: false
#| warning: false


# load packages
library(tidyverse)

library(pheatmap)
library(plotly)
library(GGally)
library(ggpubr)
library(ggplot2)
library(corrplot)

library(DESeq2)
library(gprofiler2)
set_base_url("https://biit.cs.ut.ee/gprofiler_archive3/e108_eg55_p17/")
library(WGCNA)

library(DT)

library(here)

# functions
create_dt <- function(x){
  DT::datatable(x,
                extensions = 'Buttons',
                rownames = FALSE, 
                filter="top",
                options = list(dom = 'Blfrtip',
                               buttons = c('copy', 'csv', 'excel'),
                               pageLength = 5, 
                               scrollX= TRUE
                               ))
  
}

# reading in the sample details
sample_details <- read_csv("/projects/munger-lab/projects/palate-project-murray-munger/samplesheet.csv") 

# domain colors
domain_colors <- c(MAX=rgb(163,82,157, maxColorValue = 255), 
                   POST=rgb(158,156,201, maxColorValue = 255),
                   PM=rgb(252,206,93, maxColorValue = 255))

# strain colors
strain_colors <- c( B6 = "#555555", 
                    CAST = "#009E73",
                    DO = rgb(163,82,157, maxColorValue = 255))
```

```{r load_data_emase}
#| message: false
#| warning: false

# loading the count data
load("/projects/munger-lab/projects/palate-project-murray-munger/read_mapping/palate_gbrs_emase_counts_v2.RData") # raw_expr_mat, expr_mat

# Get v84 gene annotations
# all.genes_v84 <- ensimplR::batchGenes( ids = rownames(raw_expr_mat), species = 'Mm', release = 84)
# # Let's save these so I don't have to depend on ensimplR every time
# write_tsv(all.genes_v84, file = here("_data","ENSMUSGid_to_symbol_v84.txt"))
all.genes_v84 <- read_tsv( here("_data","ENSMUSGid_to_symbol_v84.txt"))
all.genes_v84 <- all.genes_v84 %>%   mutate( midpoint = (start+end)/2)

all_genes_palate <- all.genes_v84 %>% 
  filter(gene_id %in% rownames(expr_mat))

# process data
contam_samples <- c("B6_12.5_PM_1","B6_13.5_POST_3", "CAST_14.5_MAX_7", "DO_13.5_MAX_6", "DO_13.5_MAX_14", "DO_13.5_MAX_14_2", "B6_13.5_MAX_3")

sample_annot <- sample_details %>% 
  filter( !sample %in% contam_samples) %>% 
  separate(Strain_stock, into = c("strain","tmp"), remove = F, sep = "_") %>% 
  select(sample,sex, AP_domain,Gest_stage, strain,batch, Harvest_date,LB_stage, palate_closure) %>% 
  mutate( strain = case_when(strain =="B6J"~"B6",
                             strain !="B6J"~strain)) 

```

This notebook is analyzing the palate gene expression from different genetic backgrounds, AP domains obtained at various gestational stages.
The first section uses the normalized gene expression counts from B6, CAST and DO mice to look at sources of variation.
The second section focuses on B6 and CAST gene expression to specifically identify differentially expressed genes across domains, gestational stages and strain backgrounds.
Finally, the third section performs weighted gene co-expression network analysis using the gene expression data from B6 and CAST strains.
The genetic characterization of gene expression and developmental phenotypes using the DO strains can be found in `Palate_qtl_mapping.html` notebook.

```{r save_data_for_ian}
#| warning: false
#| message: false
#| eval: false

list( "normalized_gene_counts" = as_tibble(expr_mat[,sample_annot$sample,drop=F], rownames = "gene_id"),
      "raw_gene_counts" = as_tibble(raw_expr_mat[,sample_annot$sample,drop=F], rownames = "gene_id") ,
     "sample_annotations"=sample_annot,
     "gene_annotations" = all_genes_palate
     ) %>%
  openxlsx::write.xlsx(., file = here("_data","Gene_counts_for_Ian_10162023.xlsx"))

note <- paste0("Data saved on ", Sys.Date(), " by SA in rstudio Strain effects.qmd script.")
expr_mat <- expr_mat[,sample_annot$sample,drop=F]
raw_expr_mat <- raw_expr_mat[,sample_annot$sample,drop=F]
save( expr_mat,
      raw_expr_mat,
      sample_annot,
      all_genes_palate,
      note,
      file = here("_data","Gene_counts_for_Ian_10162023.RData")
     )

# downloadthis::download_file(
#   path = system.file(here("_data","Gene_counts_for_Ian_10162023.xlsx"),
#                           package = "downloadthis"),
#   output_name = "Gene counts for Ian",
#   button_label = "Download gene counts",
#   button_type = "primary",
#   has_icon = TRUE,
#   icon = "fa fa-save",
#   self_contained = FALSE
# )

```


# Principal component analysis

Raw data was processed as follows:

-   Genes with a median transcript per million (TPM) lower than 0.5 were filtered while samples were grouped by strain and gestational stage. The grouping is necessary because the DO samples are significantly more in number than the other two strain backgrounds.

-   Counts were upper quartile normalized.

-   Contaminated samples were removed. The sample DO_13.5_MAX_14_2 was also removed, since the contamination was not resolved.

-   A new contaminated sample was identified and removed ("B6_13.5_MAX_3").

In the final data set we have `r formatC(nrow(expr_mat), big.mark=",")` genes expressed across `r nrow(sample_annot)` samples.
The first and second principal components (PCs) group samples by developmental time and strain background respectively.
Together the first two PCs explain 35% of the variation in gene expression.
Drivers of PC1 include genes involved in extracellular matrix and intermediate filament organization, collagen biosynthesis as well as processes related to muscle and bone development.
In addition, PC1 and PC2 drivers are overrepresented for genes that contain binding motifs for transcription factor (TF) SRF.
PC4 groups samples by AP domain irrespective of their strain background or developmental stage.
PC4 driver genes are involved in nervous system, muscle and bone development related processes in addition to BMP and WNT signaling and are overrepresented for targets of transcription factor NRSF.
Sex of the animals show up at PC7 and PC8 where together they are able to group female and male samples distinctly and explain only 4% of the variation in gene expression.

```{r pca_b6_cast_do}
#| message: false
#| warning: false

pca <- prcomp( (t(log1p(na.omit(expr_mat[,sample_annot$sample,drop=F])))), center = T, scale. = F)  # use when NAs are there
# pca <- prcomp( (t(log1p(expr_mat[,sample_annot$sample,drop=F]))), center = T, scale. = F)

pca_df <- as_tibble(pca$x, rownames = "sample") %>% 
  left_join(sample_annot)

var_explained <- (pca$sdev^2 / sum(pca$sdev^2))


```

```{r pca_ora}
#| cache: true
#| message: false
#| warning: false

# pc drivers
pc1_drivers <- pca$rotation[,"PC1", drop = FALSE] %>% 
  as_tibble( rownames = "id") %>% 
  left_join( all.genes_v84 %>%  
               select(id, symbol)
             ) %>% 
  filter( abs(PC1) >= quantile(abs(PC1), 0.95))

pc2_drivers <- pca$rotation[,"PC2", drop = FALSE] %>% 
  as_tibble( rownames = "id") %>% 
  left_join( all.genes_v84 %>%  
               select(id, symbol)
             ) %>% 
  filter( abs(PC2) >= quantile(abs(PC2), 0.95))

pc3_drivers <- pca$rotation[,"PC3", drop = FALSE] %>% 
  as_tibble( rownames = "id") %>% 
  left_join( all.genes_v84 %>%  
               select(id, symbol)
             ) %>% 
  filter( abs(PC3) >= quantile(abs(PC3), 0.95))

pc4_drivers <- pca$rotation[,"PC4", drop = FALSE] %>% 
  as_tibble( rownames = "id") %>% 
  left_join( all.genes_v84 %>%  
               select(id, symbol)
             ) %>% 
  filter( abs(PC4) >= quantile(abs(PC4), 0.95))

pc5_drivers <- pca$rotation[,"PC5", drop = FALSE] %>% 
  as_tibble( rownames = "id") %>% 
  left_join( all.genes_v84 %>%  
               select(id, symbol)
             ) %>% 
  filter( abs(PC5) >= quantile(abs(PC5), 0.95))


# ORA with pc drivers 1-5
# background


g.pc1 <- gost(
  query = pc1_drivers$symbol,
  organism = "mmusculus",
  domain_scope = "custom",
  custom_bg = all_genes_palate$symbol,
  evcodes = TRUE
)
g.pc1$result <- g.pc1$result %>% filter(term_size < 660)

g.pc2 <- gost(
  query = pc2_drivers$symbol,
  organism = "mmusculus",
  domain_scope = "custom",
  custom_bg = all_genes_palate$symbol,
  evcodes = TRUE
)
g.pc2$result <- g.pc2$result %>% filter(term_size < 660)

g.pc3 <- gost(
  query = pc3_drivers$symbol,
  organism = "mmusculus",
  domain_scope = "custom",
  custom_bg = all_genes_palate$symbol,
  evcodes = TRUE
)
if(length(g.pc3$result) >1) g.pc3$result <- g.pc3$result %>% filter(term_size < 660)

g.pc4 <- gost(
  query = pc4_drivers$symbol,
  organism = "mmusculus",
  domain_scope = "custom",
  custom_bg = all_genes_palate$symbol,
  evcodes = TRUE
)
if(length(g.pc4$result) >1) g.pc4$result <- g.pc4$result %>% filter(term_size < 660)

# g.pc5 <- gost(
#   query = pc5_drivers$symbol,
#   organism = "mmusculus",
#   domain_scope = "custom",
#   custom_bg = all.genes_v84$symbol,
#   evcodes = TRUE,
#   correction_method = "fdr"
# )
# if(length(g.pc5$result) >1) g.pc5$result <- g.pc5$result %>% filter(term_size < 660)


```

::: {#PCs .panel-tabset .nav-pills}
## Looking at first 10 PCs

By strain:

```{r first_five_pcs_emase_strain}
#| message: false
#| warning: false
#| fig-width: 14
#| fig-height: 14

pca$x %>%
  as_tibble(rownames = "sample") %>% 
  left_join(sample_annot) %>%
  ggpairs(.,
    columns = 2:11, progress = FALSE, ggplot2::aes(color = strain, shape =strain),
    upper = list(continuous = "density", combo = "box_no_facet"),
    lower = list(continuous = "points", combo = "dot_no_facet")
  ) + 
  theme_pubclean(base_size = 14) +
  scale_color_manual( values = strain_colors)+
  scale_fill_manual( values = strain_colors)+
  scale_shape_manual( values = c(B6="circle",CAST="diamond",DO="square"))+
  # color_palette("npg")+
  # fill_palette("npg")+
  theme(legend.position = "right")

```

By gestational stage:

```{r first_five_pcs_emase_gest}
#| message: false
#| warning: false
#| fig-width: 14
#| fig-height: 14

pca$x %>%
  as_tibble(rownames = "sample") %>% 
  left_join(sample_annot) %>%
  ggpairs(.,
    columns = 2:11, progress = FALSE, ggplot2::aes(shape = strain, color =Gest_stage),
    upper = list(continuous = "density", combo = "box_no_facet"),
    lower = list(continuous = "points", combo = "dot_no_facet")
  ) + 
  theme_pubclean(base_size = 14) +
  # scale_color_manual( values = strain_colors)+
  # scale_fill_manual( values = strain_colors)+
  scale_shape_manual( values = c(B6="circle",CAST="diamond",DO="square"))+
  scale_color_viridis_d()+
  scale_fill_viridis_d()+
  theme(legend.position = "right")

```

By sex:

```{r first_five_pcs_emase_sex}
#| message: false
#| warning: false
#| fig-width: 14
#| fig-height: 14

pca$x %>%
  as_tibble(rownames = "sample") %>% 
  left_join(sample_annot) %>%
  ggpairs(.,
    columns = 2:11, progress = FALSE, ggplot2::aes(shape = strain, color =sex),
    upper = list(continuous = "density", combo = "box_no_facet"),
    lower = list(continuous = "points", combo = "dot_no_facet")
  ) + 
  theme_pubclean(base_size = 14) +
  # scale_color_manual( values = strain_colors)+
  # scale_fill_manual( values = strain_colors)+
  # scale_color_viridis_d()+
  # scale_fill_viridis_d()+
  scale_shape_manual( values = c(B6="circle",CAST="diamond",DO="square"))+
  color_palette("npg")+
  fill_palette("npg")+
  theme(legend.position = "right")

```

Variation explained:

```{r scree_plot_emase}
#| message: false
#| warning: false
#| fig-width: 5
#| fig-height: 4

tibble(var =  var_explained[1:10]* 100, PC = paste0("PC", seq(1:10))) %>%
  arrange(desc(var)) %>%
  mutate(label = factor(PC, levels = PC)) %>%
  ggplot(aes(x = label, y = var)) +
  geom_col() +
  xlab("Principal Component") +
  ylab("% Variation explained") +
  theme_pubclean(base_size = 14)+
  ylim(0,25)


```

## PC1, PC3 and PC4

```{r pc124_3dplot}
#| message: false
#| warning: false
#| fig-width: 8
#| fig-height: 6

fig <- plot_ly(pca_df, 
               x = ~PC1, 
               y = ~PC3, 
               z = ~PC4,
               symbol = ~strain,
               symbols = c("circle","diamond","square"),
               text = ~sample,
               color = ~strain,
               colors = strain_colors,
               mode = "markers",
               type = "scatter3d"
)
fig <- fig %>% 
  layout(scene = list(xaxis = list(title = paste0("PC1 (",100*round(var_explained[1],2),"%)")),
                                   yaxis = list(title = paste0("PC3 (",100*round(var_explained[3],2),"%)")),
                                   zaxis = list(title = paste0("PC4 (",100*round(var_explained[4],2),"%)")))
)

fig

```

```{r pc124_3dplot_dom}
#| message: false
#| warning: false
#| fig-width: 8
#| fig-height: 6

fig <- plot_ly(pca_df, 
               x = ~PC1, 
               y = ~PC3, 
               z = ~PC4,
               color = ~AP_domain,
               symbol = ~strain,
               symbols = c("circle","diamond","square"),
               text = ~sample,
               colors = c(domain_colors),
               mode = "markers",
               type = "scatter3d"
)
fig <- fig %>% 
  layout(scene = list(xaxis = list(title = paste0("PC1 (",100*round(var_explained[1],2),"%)")),
                                   yaxis = list(title = paste0("PC3 (",100*round(var_explained[3],2),"%)")),
                                   zaxis = list(title = paste0("PC4 (",100*round(var_explained[4],2),"%)")))
)

fig

```

## PC1 group samples by developmental time

```{r pc1_pc2_emase}
#| message: false
#| warning: false
#| fig-width: 8
#| fig-height: 6

pca_plot <- pca_df %>% 
  ggplot()+
  aes( x = PC1, 
       y = PC2,
       col = Gest_stage,
       shape = strain,
       label = sample,
       )+
  geom_point(size = 4, alpha = 0.7)+
  theme_pubclean()+
  #color_palette("npg")+
  #scale_color_manual( values = strain_colors)+
  scale_color_viridis_d()+
  scale_shape_manual( values = c(B6="circle",CAST="diamond",DO="square"))+
  xlab(paste0("PC1 (",100*round(var_explained[1],2),"%)"))+
  ylab(paste0("PC2 (",100*round(var_explained[2],2),"%)"))+
  theme(legend.position = "right")+
  labs(shape = "strain",
       col = "Gestational\nstage")


ggplotly(pca_plot, tooltip = c("label"))

```

```{r pc1_pc2_emase_lb}
#| message: false
#| warning: false
#| fig-width: 8
#| fig-height: 6

pca_plot <- pca_df %>% 
  ggplot()+
  aes( x = PC1, 
       y = PC2,
       shape = strain,
       #shape = Gest_stage,
       col = LB_stage,
       label = sample,
       )+
  geom_point(size = 4, alpha = 0.7)+
  theme_pubclean()+
  scale_color_viridis_c(limits = c(12,16))+
  #scale_color_manual(values=strain_colors)+
  scale_shape_manual( values = c(B6="circle",CAST="diamond",DO="square"))+
  xlab(paste0("PC1 (",100*round(var_explained[1],2),"%)"))+
  ylab(paste0("PC2 (",100*round(var_explained[2],2),"%)"))+
  theme(legend.position = "right")+
  labs(color = "Limb bud\nstage",
       shape = "Strain")


ggplotly(pca_plot, tooltip = c("label"))

```

ORA results for PC1 driver genes:

```{r pc1_ora_plot}
#| message: false
#| warning: false
#| eval: false
gostplot(g.pc1)

```

```{r pc1_ora_table}
#| message: false
#| warning: false


g.pc1$result %>% 
  select( term_name, source, FDR = p_value, term_size, intersection_size,intersection) %>%  # intersecion: adding the list of genes identified as overlapping with each category
  filter( FDR <0.01) %>% 
  mutate_if( is.numeric, formatC, digits =2) %>% 
  create_dt()

```

Table with the full list of PC1 driver genes:

```{r pc1_gene_table}
#| message: false
#| warning: false


pc1_drivers %>% 
  left_join(
    all_genes_palate %>% 
      select(symbol, chromosome)
  ) %>% 
  arrange(desc(abs(PC1))) %>% 
  mutate_if(is.numeric, round, 2) %>% 
  create_dt()

```

## PC2 

```{r pc2_pc3_emase}
#| message: false
#| warning: false
#| fig-width: 8
#| fig-height: 6

pca_plot <- pca_df %>% 
  ggplot()+
  aes( x = PC2, 
       y = PC3,
       col = strain,
       shape = strain,
       label = sample
       )+
  geom_point(size = 4, alpha = 0.7)+
  theme_pubclean()+
  #color_palette("npg")+
  scale_color_manual( values = strain_colors)+
  scale_shape_manual( values = c(B6="circle",CAST="diamond",DO="square"))+
  xlab(paste0("PC2 (",100*round(var_explained[2],2),"%)"))+
  ylab(paste0("PC3 (",100*round(var_explained[3],2),"%)"))+
  theme(legend.position = "right")


ggplotly(pca_plot, tooltip = c("label"))

```

ORA results for PC2 driver genes:

```{r pc2_ora_plot}
#| message: false
#| warning: false
#| eval: false
gostplot(g.pc2, capped = F)

```

```{r pc2_ora_table}

g.pc2$result %>% 
  select( term_name, source, FDR = p_value, term_size, intersection_size, intersection) %>% 
  filter( FDR <0.01) %>% 
  mutate_if( is.numeric, formatC, digits =2) %>% 
  create_dt()

```

Table with the full list of PC2 driver genes:

```{r pc2_gene_table}
#| message: false
#| warning: false


pc2_drivers %>% 
    left_join(
    all_genes_palate %>% 
      select(symbol, chromosome)
  ) %>% 
  arrange(desc(abs(PC2))) %>% 
  mutate_if(is.numeric, round, 2) %>% 
  create_dt()

```

## PC3 groups samples by strain

```{r pc1_pc3}
#| message: false
#| warning: false
#| fig-width: 8
#| fig-height: 6

pca_plot <- pca_df %>% 
  ggplot()+
  aes( y = PC3, 
       x = PC1,
       col = strain,
       shape = strain,
       label = sample,
       )+
  geom_point(size = 4, alpha = 0.7)+
  theme_pubclean()+
  #color_palette("npg")+
  scale_color_manual( values = strain_colors)+
  #scale_color_viridis_d()+
  scale_shape_manual( values = c(B6="circle",CAST="diamond",DO="square"))+
  ylab(paste0("PC3 (",100*round(var_explained[3],2),"%)"))+
  xlab(paste0("PC1 (",100*round(var_explained[1],2),"%)"))+
  theme(legend.position = "right")+
  labs(shape = "strain",
       color = "strain")


ggplotly(pca_plot, tooltip = c("label"))

```

```{r pc1_pc3_lb}
#| message: false
#| warning: false
#| fig-width: 8
#| fig-height: 6

pca_plot <- pca_df %>% 
  ggplot()+
  aes( x = PC1, 
       y = PC3,
       col = LB_stage,
       shape = strain,
       label = sample,
       )+
  geom_point(size = 4, alpha = 0.7)+
  theme_pubclean()+
  scale_color_viridis_c(limits = c(12,16))+
  scale_shape_manual( values = c(B6="circle",CAST="diamond",DO="square"))+
  ylab(paste0("PC3 (",100*round(var_explained[3],2),"%)"))+
  xlab(paste0("PC1 (",100*round(var_explained[2],2),"%)"))+
  theme(legend.position = "right")+
  labs(color = "Limb bud\nstage",
       shape = "Strain")


ggplotly(pca_plot, tooltip = c("label"))

```

ORA results for PC3 driver genes: none!

```{r pc3_ora_plot}
#| message: false
#| warning: false
#| eval: false
gostplot(g.pc3, capped = F)

```

```{r pc3_ora_table}
#| eval: false
g.pc3$result %>% 
  select( term_name, source, FDR = p_value, term_size, intersection_size, intersection) %>% 
  filter( FDR <0.01) %>% 
  mutate_if( is.numeric, formatC, digits =2) %>% 
  create_dt()

```

Table with the full list of PC3 driver genes:

```{r pc3_gene_table}
#| message: false
#| warning: false


pc3_drivers %>% 
  left_join(
    all_genes_palate %>% 
      select(symbol, chromosome)
  ) %>% 
  arrange(desc(abs(PC3))) %>% 
  mutate_if(is.numeric, round, 2) %>% 
  create_dt()

```

## PC4 groups samples by domain

```{r pc1_pc4_b6}
#| message: false
#| warning: false
#| fig-width: 8
#| fig-height: 6

pca_plot <- pca_df %>% 
  filter(strain =="B6") %>% 
  ggplot()+
  aes( x = PC4, 
       y = PC1,
       col = AP_domain,
       shape = Gest_stage,
       label = sample
       )+
  geom_point(size = 4, alpha = 0.7)+
  theme_pubclean()+
  #color_palette("npg")+
  scale_color_manual( values = domain_colors)+
  #scale_shape_manual( values = c(B6="circle",CAST="diamond",DO="square"))+
  xlab(paste0("PC4 (",100*round(var_explained[4],2),"%)"))+
  ylab(paste0("PC1 (",100*round(var_explained[1],2),"%)"))+
  theme(legend.position = "right")


ggplotly(pca_plot, tooltip = c("label"))

```

```{r pc1_pc4_all}
#| message: false
#| warning: false
#| fig-width: 8
#| fig-height: 6

pca_plot <- pca_df %>% 
  ggplot()+
  aes( x = PC4, 
       y = PC1,
       col = AP_domain,
       shape = strain,
       label = sample
       )+
  geom_point(size = 4, alpha = 0.7)+
  theme_pubclean()+
  #color_palette("npg")+
  scale_color_manual( values = domain_colors)+
  scale_shape_manual( values = c(B6="circle",CAST="diamond",DO="square"))+
  xlab(paste0("PC4 (",100*round(var_explained[4],2),"%)"))+
  ylab(paste0("PC1 (",100*round(var_explained[1],2),"%)"))+
  theme(legend.position = "right")


ggplotly(pca_plot, tooltip = c("label"))

```

ORA results for PC4 driver genes:

```{r pc4_ora_plot}
#| message: false
#| warning: false
#| eval: false
gostplot(g.pc4, capped = F)

```

```{r pc4_ora_table}

g.pc4$result %>% 
  select( term_name, source, FDR = p_value, term_size, intersection_size, intersection) %>% 
  filter( FDR <0.01) %>% 
  mutate_if( is.numeric, formatC, digits =2) %>% 
  create_dt()

```

Table with the full list of PC4 driver genes:

```{r pc4_gene_table}
#| message: false
#| warning: false


pc4_drivers %>% 
  left_join(
    all_genes_palate %>% 
      select(symbol, chromosome)
  ) %>% 
  arrange(desc(abs(PC4))) %>% 
  mutate_if(is.numeric, round, 2) %>% 
  create_dt()

```



## PC9 and PC10 group samples by sex

```{r pc9_pc10}
#| message: false
#| warning: false
#| fig-width: 8
#| fig-height: 6

pca_plot <- pca_df %>% 
  filter( !is.na(sex)) %>% 
  ggplot()+
  aes( y = PC9, 
       x = PC10,
       col = sex,
       shape = strain,
       label = sample
       )+
  geom_point(size = 4, alpha = 0.7)+
  theme_pubclean()+
  color_palette("npg")+
  #scale_color_viridis_d()+
  scale_shape_manual( values = c(B6="circle",CAST="diamond",DO="square"))+
  ylab(paste0("PC9 (",100*round(var_explained[9],2),"%)"))+
  xlab(paste0("PC10 (",100*round(var_explained[10],2),"%)"))+
  theme(legend.position = "right")


ggplotly(pca_plot, tooltip = c("label"))

```

:::

<!-- # Differential gene expression analysis -->

<!-- In the tabs below you can find the detailed analyses. -->
<!-- Briefly, I analyzed the B6 and CAST data separately to identify genes differentially expressed in each background across AP domains, over developmental time and change differently over time across domains. -->
<!-- Next, I analyzed the B6 and CAST data together while separating the data by AP domains. -->
<!-- For the individual strain analysis, I am focusing on the data from only the B6 or CAST animals that includes males and females, and contain the three AP domains (PM, MAX and POST) obtained at various developmental stages (LB_stage). -->
<!-- I merge the technical replicates due to resequencing of several samples using `collapseReplicates()` function from DESeq2. -->
<!-- We expect to have genes that show significant differences between AP domains, over developmental time and genes with different trends over time across the three tissues. -->
<!-- In order to identify differentially expressed genes between AP domains and over time I obtain the main effects for AP_domain and LB_stage while using a nesting for the AP domain since they are obtained from the same animal (\~ AP_domain + LB_stage + AP_domain:ind). -->
<!-- For identifying genes with different trends over time across the three AP domains I use the likelihood ratio test (LRT) to compare the initial simple model to the one that includes an interaction term between AP domain and limb bud stage (\~ AP_domain + LB_stage + AP_domain:ind + AP_domain:LB_stage). -->
<!-- The LRT will not return genes where the trend over time is not different across domains, even though the genes may be differentially expressed between domains at a particular time point. -->
<!-- The significant DE genes will be those that show differences in trends over time in at least two AP domains. -->
<!-- Once I have this DE gene list, I then use the full model to get the effects of developmental time in all three domains. -->
<!-- *Note that* we need to be very careful when interpreting the main effects with a linear model that contains an interaction term, they do not represent the overall effect of the predictor (e.g. LB_stage) since the predictors involved in an interaction do not have a single overall effect anymore! -->
<!-- For example the main effect for LB_stage will represent the effect when AP_domain is at the reference level which is the PM domain in our data set. -->
<!-- I did exclude the genes that showed a significant interaction effect between domain and developmental time (AP_domain:LB_stage) from the list of differentially expressed genes obtained from the simple model using the main effects of AP_domain or LB_stage. -->

<!-- ## Differential gene expression in palate domains across developmental time in B6 mice -->

<!-- ```{r b6_gest_domain} -->
<!-- #| warning: false -->
<!-- #| message: false -->

<!-- # Here, I am running all the DESEQ2 models + getting the gene lists!  -->

<!-- # Prep data for DESEQ2 -->
<!-- # subsetting for b6 samples only and adding unique sample ids  -->
<!-- b6_comp_samples <- sample_annot %>%  -->
<!--   filter(strain %in% c("B6")) %>%  -->
<!--   separate(sample, sep = "_", into = c("s","e","d","ind","rep"), remove = F) %>%  -->
<!--   select(-e,-d) %>%  -->
<!--   mutate( rep = ifelse( is.na(rep),1,rep)) %>%  -->
<!--   unite( "unique_sampleid" , c(s,ind,AP_domain,Gest_stage),sep ="_", remove = F) # adding an individual column to match the domains to the same animal/embryo and rep column for replicates -->
<!-- # making the coldata object to feed into deseq2 -->
<!-- b6_coldata <- b6_comp_samples %>%  -->
<!--   select(sample, sex,ind, unique_sampleid, rep, AP_domain, Gest_stage, strain,LB_stage) %>%  -->
<!--   filter(!is.na(sex) ) %>%  -->
<!--   mutate_if(is.character, as.factor) %>%  -->
<!--   mutate( AP_domain = factor(AP_domain, levels = c("PM","MAX","POST")) ) %>%  -->
<!--   column_to_rownames("sample")  -->
<!-- # get the expression matrix to feed into deseq2 using raw seq and rounding to integers -->
<!-- b6_cts <- round(raw_expr_mat[all_genes_palate$gene_id,rownames(b6_coldata), drop = F]) -->
<!-- # let's make the dds object then collapse the technical replicates -->
<!-- b6_dds <- DESeqDataSetFromMatrix( countData = b6_cts,  -->
<!--                                       colData = b6_coldata, -->
<!--                                       design = ~1) -->
<!-- # collapse the sequencing replicates -->
<!-- b6_dds_coll <- collapseReplicates(b6_dds, b6_dds$unique_sampleid) -->
<!-- # you can see that the sample number decreased after collapsing by looking at the dimensions before and after that step. -->
<!-- # colData(b6_dds_coll) -->
<!-- # colData(b6_dds) -->

<!-- # let's setup the designs for the full(comp) and reduced(simple) linear models -->
<!-- b6_simple_model <- model.matrix(~ AP_domain + AP_domain:ind+ LB_stage , data = colData(b6_dds_coll)) -->
<!-- b6_comp_model <- model.matrix(~ AP_domain + AP_domain:ind + LB_stage +  AP_domain:LB_stage, data = colData(b6_dds_coll)) -->

<!-- # we don't have any all zero columns so the below lines are not necessary. -->
<!-- # all.zero <- apply(b6_comp_model, 2, function(x) all(x==0)) -->
<!-- # idx <- which(all.zero) -->
<!-- # b6_comp_model <- b6_comp_model[,-idx] -->

<!-- # Run deseq2 with the simple and complete model.  -->
<!-- b6_dds_simple <- DESeq(b6_dds_coll, betaPrior = FALSE, full=b6_simple_model) -->
<!-- b6_dds_comp <- DESeq(b6_dds_coll, betaPrior = FALSE, full=b6_comp_model) -->
<!-- #resultsNames(b6_dds_simple) -->
<!-- #resultsNames(b6_dds_comp) -->

<!-- # let's run the lrt to get genes that DO show significant interaction effects between domain and gestational stage -->
<!-- # For genes that DO show a significant interaction effect I will use the results from the full model (b6_dds_comp) and for genes that DOESN'T show a significant interaction effect I will use the reduced model (b6_dds_simple) to get differential expression  -->
<!-- # comparing the full model with the interaction term between stage + domain to the reduced model without the interaction. -->
<!-- b6_dds_comp_simple_lrt <- DESeq(b6_dds_coll, test="LRT",  -->
<!--                                 full= b6_comp_model,  -->
<!--                                 reduced = b6_simple_model) -->

<!-- # resultsNames(b6_dds_comp_simple_lrt) -->

<!-- # Getting into gene lists! -->
<!-- # DEgenes - by domain -->
<!-- b6_domain_eff_max_pm <- results(b6_dds_simple, contrast = list("AP_domainMAX")) %>%  -->
<!--   as_tibble( rownames = "gene_id") %>%  -->
<!--   filter( padj < 0.05 & !is.na(padj) & abs(log2FoldChange) > .5)  %>%  -->
<!--   left_join( all_genes_palate)  -->
<!-- b6_domain_eff_post_pm <- results(b6_dds_simple, contrast = list("AP_domainPOST")) %>%  -->
<!--   as_tibble( rownames = "gene_id") %>%  -->
<!--   filter( padj < 0.05 & !is.na(padj) & abs(log2FoldChange) > .5)  %>%  -->
<!--   left_join( all_genes_palate)  -->
<!-- b6_domain_eff_post_max <- results(b6_dds_simple, contrast = list("AP_domainPOST","AP_domainMAX")) %>%  -->
<!--   as_tibble( rownames = "gene_id") %>%  -->
<!--   filter( padj < 0.05 & !is.na(padj) & abs(log2FoldChange) > .5)  %>%  -->
<!--   left_join( all_genes_palate)  -->

<!-- # DEgenes - by stage -->
<!-- b6_stage_diff <- results(b6_dds_simple, name = ("LB_stage")) %>%  -->
<!--   as_tibble( rownames = "gene_id") %>%  -->
<!--   filter( padj < 0.05 & !is.na(padj) & abs(log2FoldChange) > .5)  %>%  -->
<!--   left_join( all_genes_palate)  -->

<!-- # DEgenes that show domain*stage interaction -->
<!-- b6_stage_by_domain_pm <- results( b6_dds_comp, contrast = list(c("LB_stage"))) %>%  -->
<!--   as_tibble( rownames = "gene_id") %>%  -->
<!--   filter( padj < 0.05 & !is.na(padj) & abs(log2FoldChange) > .5)  %>%  -->
<!--   left_join( all_genes_palate)  -->
<!-- b6_stage_by_domain_max <- results( b6_dds_comp, contrast = list(c("LB_stage","AP_domainMAX.LB_stage"))) %>%  -->
<!--   as_tibble( rownames = "gene_id") %>%  -->
<!--   filter( padj < 0.05 & !is.na(padj) & abs(log2FoldChange) > .5)  %>%  -->
<!--   left_join( all_genes_palate)  -->
<!-- b6_stage_by_domain_post <- results( b6_dds_comp, contrast = list(c("LB_stage","AP_domainPOST.LB_stage"))) %>%  -->
<!--   as_tibble( rownames = "gene_id") %>%  -->
<!--   filter( padj < 0.05 & !is.na(padj) & abs(log2FoldChange) > .5)  %>%  -->
<!--   left_join( all_genes_palate)  -->

<!-- b6_domain_by_stage_max_pm <- results( b6_dds_comp, contrast = list(c("AP_domainMAX","AP_domainMAX.LB_stage"))) %>%  -->
<!--   as_tibble( rownames = "gene_id") %>%  -->
<!--   filter( padj < 0.05 & !is.na(padj) & abs(log2FoldChange) > .5)  %>%  -->
<!--   left_join( all_genes_palate)  -->
<!-- b6_domain_by_stage_post_pm <- results( b6_dds_comp, contrast = list(c("AP_domainPOST","AP_domainPOST.LB_stage"))) %>%  -->
<!--   as_tibble( rownames = "gene_id") %>%  -->
<!--   filter( padj < 0.05 & !is.na(padj) & abs(log2FoldChange) > .5)  %>%  -->
<!--   left_join( all_genes_palate)  -->
<!-- b6_domain_by_stage_post_max <- results( b6_dds_comp, contrast = list(c("AP_domainPOST","AP_domainMAX","AP_domainMAX.LB_stage","AP_domainPOST.LB_stage"))) %>%  -->
<!--   as_tibble( rownames = "gene_id") %>%  -->
<!--   filter( padj < 0.05 & !is.na(padj) & abs(log2FoldChange) > .5)  %>%  -->
<!--   left_join( all_genes_palate)  -->


<!-- # Let's get the gene list that has a significant difference with/without the interaction term hence is likely to show an interaction effect! -->
<!-- b6_domain_by_stage_lrt <- results( b6_dds_comp_simple_lrt) %>%  -->
<!--   as_tibble( rownames = "gene_id") %>%  -->
<!--   filter( !is.na(padj), padj < 0.05) %>%  -->
<!--   left_join( all_genes_palate)  -->


<!-- # I will remove the genes that show an interaction effect from the main effect list since the appropriate comparison will be using the full model rather than the reduced for those -->
<!-- # merge the genes differentially expressed between domains AND remove the ones showing interaction with time -->
<!-- b6_domain_eff_genes_merged <- b6_domain_eff_max_pm %>% -->
<!--   mutate( Comparison = "MAX vs PM") %>% -->
<!--   rbind( -->
<!--     b6_domain_eff_post_pm %>% -->
<!--       mutate( Comparison = "POST vs PM") -->
<!--   ) %>% -->
<!--   rbind( -->
<!--     b6_domain_eff_post_max %>% -->
<!--       mutate( Comparison = "POST vs MAX") -->
<!--   )%>% -->
<!--   filter( padj < 0.05 & !is.na(padj) & abs(log2FoldChange) > .5)  %>%  -->
<!--   filter( ! gene_id %in% b6_domain_by_stage_lrt$gene_id ) -->


<!-- # merge the genes differentially expressed over time AND remove the ones showing interaction with domain -->
<!-- b6_stage_eff_genes_merged <-  b6_stage_diff %>%  -->
<!--   mutate( Comparison = case_when( log2FoldChange >0 ~ "Upregulated over time", -->
<!--                                   log2FoldChange <0 ~"Downregulated over time") -->
<!--           ) %>%  -->
<!--   filter( padj < 0.05 & !is.na(padj) & abs(log2FoldChange) > .5)  %>%  -->
<!--   filter( ! gene_id %in% b6_domain_by_stage_lrt$gene_id )  -->

<!-- # merge the genes showing different time*domain effects and subset for the genes showing significant interaction effects acc to the LRT -->
<!-- b6_domain_by_stage_merged <- b6_domain_by_stage_max_pm %>%  -->
<!--   filter( padj < 0.05 &  -->
<!--             abs(log2FoldChange) > .5 & -->
<!--             gene_id %in% b6_domain_by_stage_lrt$gene_id -->
<!--   ) %>%  -->
<!--   mutate( Comparison = "MAX vs PM") %>%  -->
<!--   rbind( -->
<!--     b6_domain_by_stage_post_pm %>%  -->
<!--       filter( padj < 0.05 & -->
<!--                 abs(log2FoldChange) > .5 & -->
<!--                 gene_id %in% b6_domain_by_stage_lrt$gene_id -->
<!--       ) %>%  -->
<!--       mutate( Comparison = "POST vs PM")  -->
<!--   ) %>%  -->
<!--   rbind( -->
<!--      b6_domain_by_stage_post_max %>%  -->
<!--       filter( padj < 0.05 & -->
<!--                 abs(log2FoldChange) > .5 & -->
<!--                 gene_id %in% b6_domain_by_stage_lrt$gene_id -->
<!--       ) %>%  -->
<!--       mutate( Comparison = "POST vs MAX")  -->
<!--   ) %>%  -->
<!--   left_join( all_genes_palate)  -->

<!-- b6_stage_by_domain_merged <- b6_stage_by_domain_pm %>%  -->
<!--   filter( padj < 0.05 &  -->
<!--             abs(log2FoldChange) > .5 & -->
<!--             gene_id %in% b6_domain_by_stage_lrt$gene_id -->
<!--   ) %>%  -->
<!--   mutate( Comparison = "PM") %>%  -->
<!--   rbind( -->
<!--     b6_stage_by_domain_max %>%  -->
<!--       filter( padj < 0.05 & -->
<!--                 abs(log2FoldChange) > .5 & -->
<!--                 gene_id %in% b6_domain_by_stage_lrt$gene_id -->
<!--       ) %>%  -->
<!--       mutate( Comparison = "MAX")  -->
<!--   ) %>%  -->
<!--   rbind( -->
<!--      b6_stage_by_domain_post %>%  -->
<!--       filter( padj < 0.05 & -->
<!--                 abs(log2FoldChange) > .5 & -->
<!--                 gene_id %in% b6_domain_by_stage_lrt$gene_id -->
<!--       ) %>%  -->
<!--       mutate( Comparison = "POST")  -->
<!--   ) %>%  -->
<!--   left_join( all_genes_palate)  -->

<!-- # getting gene counts from each DDS object to visualize the results -->
<!-- # the counts are the same in different models so we can just get from either one. -->
<!-- b6_gene_counts <- counts(b6_dds_simple, normalized=TRUE) %>% -->
<!--   as_tibble( rownames = "gene_id") %>% -->
<!--   pivot_longer(2:65, names_to = "sample", values_to = "count") %>% -->
<!--   left_join( colData(b6_dds_simple) %>%  -->
<!--                as_tibble( rownames = "sample") -->
<!--              ) -->



<!-- ``` -->

<!-- There are `r formatC( b6_domain_eff_genes_merged %>% select(gene_id) %>% distinct() %>% nrow(), big.mark = ",")` genes differentially expressed across the three AP domains (adjusted p-value \< 0.05 and 1.5 fold change), `r formatC( b6_stage_eff_genes_merged %>% select(gene_id) %>% distinct() %>% nrow(), big.mark = ",")` genes that are differentially expressed over developmental time. -->
<!-- In addition, there are `r formatC( b6_domain_by_stage_merged %>% select(gene_id) %>% distinct() %>% nrow(), big.mark = ",")` genes that are differentially expressed between domains over time (domain by stage effect) and `r formatC( b6_domain_by_stage_merged %>% select(gene_id) %>% distinct() %>% nrow(), big.mark = ",")` genes that change differently between domains over time (stage by domain effect). -->
<!-- Below in each tab, I include the list of genes with details and overrepresentation analysis results. -->

<!-- ```{r} -->

<!-- b6_domain_by_stage_merged %>% -->
<!--   pivot_wider(., id_cols = "gene_id", names_from = Comparison, names_glue = "{Comparison}_{.value}",values_from = c(padj, log2FoldChange) ) %>% -->
<!--   filter( -->
<!--     `MAX vs PM_padj` < 0.05 & `POST vs PM_padj` < 0.05 & -->
<!--     abs(`MAX vs PM_log2FoldChange`) > .5 & abs(`POST vs PM_log2FoldChange`) > .5) %>% -->
<!--   # filter( -->
<!--   #    ( is.na(`POST vs MAX_padj`) | -->
<!--   #        `POST vs MAX_padj` >=  0.05 | -->
<!--   #        is.na(`POST vs MAX_log2FoldChange`) | -->
<!--   #        abs(`POST vs MAX_log2FoldChange`) < .5) -->
<!--   # ) %>% -->
<!--   mutate( Comparison = ifelse( `MAX vs PM_log2FoldChange` > 0 &`POST vs PM_log2FoldChange` > 0, -->
<!--           "Lower expression in PM", -->
<!--           "Higher expression in PM") -->
<!--   ) %>% -->
<!--   select(gene_id, Comparison) %>% -->
<!--   left_join(b6_gene_counts) %>% -->
<!--   ggplot()+ -->
<!--   aes( x = LB_stage, y = count, col = AP_domain, group = AP_domain)+ -->
<!--   geom_point()+ -->
<!--   #geom_line(aes(group=interaction(gene_id,time, ind)), alpha = 0.2)+ -->
<!--   stat_summary(aes(group=interaction(Comparison,AP_domain)), fun = mean, geom="line", size = 1.2, alpha = 0.7)+ -->
<!--   scale_color_manual( values = domain_colors)+ -->
<!--   labs(color = "AP Domain")+ -->
<!--   facet_wrap(~Comparison)+ -->
<!--   theme_pubclean()+ -->
<!--   scale_y_log10() -->


<!-- b6_stage_by_domain_merged %>% -->
<!--   filter(Comparison =="PM") %>%  -->
<!--   mutate( type = ifelse(log2FoldChange > 0, "Up","Down")) %>% -->
<!--   unite( "Comparison_type",  c("type","Comparison"),  sep = " in ", remove = FALSE) %>% -->
<!--   select(gene_id, Comparison_type) %>% -->
<!--   mutate(Comparison_type = paste(Comparison_type, "over time")) %>%  -->
<!--   left_join(b6_gene_counts) %>% -->
<!--   ggplot()+ -->
<!--   aes(x = LB_stage, y = count, color = AP_domain, group = AP_domain) +  -->
<!--   geom_point() +  -->
<!--   stat_summary(aes(group=interaction(Comparison_type,AP_domain)), fun = mean, geom="line", size = 1.2, alpha = 0.7)+ -->
<!--   scale_color_manual( values = domain_colors)+ -->
<!--   theme_pubclean()+ -->
<!--   ylab("Gene expression (raw counts)")+ -->
<!--   xlab("LB stage")+ -->
<!--   labs(color = "AP Domain")+ -->
<!--   scale_y_log10()+ -->
<!--   facet_wrap(~Comparison_type) -->

<!-- ``` -->

<!-- :::: {#B6_results .panel-tabset .nav-pills} -->

<!-- ### Genes differentially expressed in the PM domain -->

<!-- ```{r pm_diff_genes_rep_plot} -->
<!-- #| warning: false -->
<!-- #| message: false -->
<!-- #| fig-width: 12 -->
<!-- #| fig-height: 5 -->

<!-- b6_domain_eff_genes_merged %>% -->
<!--   pivot_wider(., id_cols = "gene_id", names_from = Comparison, names_glue = "{Comparison}_{.value}",values_from = c(padj, log2FoldChange) ) %>% -->
<!--   filter( -->
<!--     `MAX vs PM_padj` < 0.05 & `POST vs PM_padj` < 0.05 & -->
<!--     abs(`MAX vs PM_log2FoldChange`) > .5 & abs(`POST vs PM_log2FoldChange`) > .5) %>% -->
<!--   # filter( -->
<!--   #    ( is.na(`POST vs MAX_padj`) | -->
<!--   #        `POST vs MAX_padj` >=  0.05 | -->
<!--   #        is.na(`POST vs MAX_log2FoldChange`) | -->
<!--   #        abs(`POST vs MAX_log2FoldChange`) < .5) -->
<!--   # ) %>% -->
<!--   mutate( Comparison = ifelse( `MAX vs PM_log2FoldChange` > 0 &`POST vs PM_log2FoldChange` > 0, -->
<!--           "Lower expression in PM", -->
<!--           "Higher expression in PM") -->
<!--   ) %>% -->
<!--   select(gene_id, Comparison) %>% -->
<!--   left_join(b6_gene_counts) %>% -->
<!--   ggplot()+ -->
<!--   aes( x = AP_domain, y = count, col = AP_domain)+ -->
<!--   geom_point()+ -->
<!--   #geom_line(aes(group=interaction(gene_id,time, ind)), alpha = 0.2)+ -->
<!--   stat_summary(aes(group=Comparison), fun = mean, geom="line",col = "black")+ -->
<!--   facet_wrap(~Comparison, scale = "free_y")+ -->
<!--   theme_pubclean()+ -->
<!--   scale_y_log10()+ -->
<!--   scale_color_manual(values = domain_colors) -->

<!-- ``` -->

<!-- ```{r pm_diff_genes} -->
<!-- #| warning: false -->
<!-- #| message: false -->
<!-- #| cache: true -->

<!-- # MAX vs PM_padj < 0.05 & POST vs PM_padj < 0.05 -->
<!-- b6_pm_diff_genes <-  b6_domain_eff_genes_merged %>% -->
<!--   pivot_wider(., id_cols = "gene_id", names_from = Comparison, names_glue = "{Comparison}_{.value}",values_from = c(padj, log2FoldChange) ) %>% -->
<!--   filter( -->
<!--     `MAX vs PM_padj` < 0.05 & `POST vs PM_padj` < 0.05 & -->
<!--     abs(`MAX vs PM_log2FoldChange`) > .5 & abs(`POST vs PM_log2FoldChange`) > .5) %>% -->
<!--   # filter( -->
<!--   #    ( is.na(`POST vs MAX_padj`) | -->
<!--   #        `POST vs MAX_padj` >=  0.05 | -->
<!--   #        is.na(`POST vs MAX_log2FoldChange`) | -->
<!--   #        abs(`POST vs MAX_log2FoldChange`) < .5) -->
<!--   # ) %>% -->
<!--   mutate( Comparison = ifelse( `MAX vs PM_log2FoldChange` > 0 &`POST vs PM_log2FoldChange` > 0, -->
<!--           "Lower expression in PM", -->
<!--           "Higher expression in PM") -->
<!--   ) %>% -->
<!--   left_join(all_genes_palate) -->

<!-- g.b6_domain_pm_up <- gost( query = unique( (b6_pm_diff_genes %>% -->
<!--                                                  filter( Comparison =="Higher expression in PM"))$symbol), -->
<!--                            organism = "mmusculus", -->
<!--                            domain_scope = "custom", -->
<!--                            custom_bg = all_genes_palate$symbol, -->
<!--                            evcodes = TRUE -->
<!--                            ) -->
<!-- g.b6_domain_pm_up$result <- g.b6_domain_pm_up$result %>% filter(term_size < 660) -->

<!-- g.b6_domain_pm_down <- gost( query = unique( (b6_pm_diff_genes %>% -->
<!--                                                  filter( Comparison =="Lower expression in PM"))$symbol), -->
<!--                            organism = "mmusculus", -->
<!--                            domain_scope = "custom", -->
<!--                            custom_bg = all_genes_palate$symbol, -->
<!--                            evcodes = TRUE -->
<!--                            ) -->
<!-- g.b6_domain_pm_down$result <- g.b6_domain_pm_down$result %>% filter(term_size < 660) -->


<!-- ``` -->

<!-- ```{r pm_diff_genes_table} -->
<!-- #| message: false -->
<!-- #| warning: false -->

<!-- b6_pm_diff_genes %>% -->
<!--   select(Comparison, gene_id, symbol, chromosome ) %>% -->
<!--   create_dt() -->

<!-- ``` -->

<!-- ```{r pm_diff_genes_ora_table} -->
<!-- #| message: false -->
<!-- #| warning: false -->

<!-- g.b6_domain_pm_up$result %>% -->
<!--   mutate( Category = "Higher expression in PM") %>% -->
<!--   rbind( -->
<!--     g.b6_domain_pm_down$result %>% -->
<!--       mutate(Category = "Lower expression in PM") -->
<!--   )  %>% -->
<!--   select( Category, term_name, source, p_value, term_size, intersection_size,intersection) %>%  # intersecion: adding the list of genes identified as overlapping with each category -->
<!--   mutate_if( is.numeric, formatC, digits =2) %>% -->
<!--   create_dt() -->

<!-- ``` -->

<!-- ### Genes differentially expressed in the MAX domain -->

<!-- ```{r max_diff_genes_rep_plot} -->
<!-- #| warning: false -->
<!-- #| message: false -->
<!-- #| fig-width: 12 -->
<!-- #| fig-height: 5 -->

<!-- b6_domain_eff_genes_merged %>% -->
<!--   pivot_wider(., id_cols = "gene_id", names_from = Comparison, names_glue = "{Comparison}_{.value}",values_from = c(padj, log2FoldChange) ) %>% -->
<!--    filter( -->
<!--     `MAX vs PM_padj` < 0.05 & `POST vs MAX_padj` < 0.05 & -->
<!--     abs(`MAX vs PM_log2FoldChange`) > .5 & abs(`POST vs MAX_log2FoldChange`) > .5) %>% -->
<!--   # filter( -->
<!--   #    ( is.na(`POST vs PM_padj`) | -->
<!--   #        `POST vs PM_padj` >=  0.05 | -->
<!--   #        is.na(`POST vs PM_log2FoldChange`) | -->
<!--   #        abs(`POST vs PM_log2FoldChange`) < .5) -->
<!--   # )  %>% -->
<!--   mutate( Comparison = ifelse( `MAX vs PM_log2FoldChange` < 0 & -->
<!--             `POST vs MAX_log2FoldChange` > 0, -->
<!--           "Lower expression in MAX", -->
<!--           ifelse(`MAX vs PM_log2FoldChange` > 0 & -->
<!--             `POST vs MAX_log2FoldChange` < 0, -->
<!--             "Higher expression in MAX",NA)) -->
<!--   ) %>% -->
<!--   filter( !is.na(Comparison)) %>% -->
<!--   select(gene_id, Comparison) %>% -->
<!--   left_join(b6_gene_counts) %>% -->
<!--   ggplot()+ -->
<!--   aes( x = AP_domain, y = count, col = AP_domain)+ -->
<!--   geom_point()+ -->
<!--   #geom_line(aes(group=interaction(gene_id,time, ind)), alpha = 0.2)+ -->
<!--   stat_summary(aes(group=Comparison), fun = mean, geom="line", col = "black")+ -->
<!--   facet_wrap(~Comparison, scale = "free_y")+ -->
<!--   theme_pubclean()+ -->
<!--   scale_y_log10()+ -->
<!--   scale_color_manual(values = domain_colors) -->

<!-- ``` -->

<!-- ```{r max_diff_genes} -->
<!-- #| warning: false -->
<!-- #| message: false -->
<!-- #| cache: true -->


<!-- # MAX vs PM_padj < 0.05 & POST vs PM_padj < 0.05 -->
<!-- b6_max_diff_genes <-  b6_domain_eff_genes_merged %>% -->
<!--   pivot_wider(., id_cols = "gene_id", names_from = Comparison, names_glue = "{Comparison}_{.value}",values_from = c(padj, log2FoldChange) ) %>% -->
<!--   filter( -->
<!--     `MAX vs PM_padj` < 0.05 & `POST vs MAX_padj` < 0.05 & -->
<!--     abs(`MAX vs PM_log2FoldChange`) > .5 & abs(`POST vs MAX_log2FoldChange`) > .5) %>% -->
<!--   # filter( -->
<!--   #    ( is.na(`POST vs PM_padj`) | -->
<!--   #        `POST vs PM_padj` >=  0.05 | -->
<!--   #        is.na(`POST vs PM_log2FoldChange`) | -->
<!--   #        abs(`POST vs PM_log2FoldChange`) < .5) -->
<!--   # )  %>% -->
<!--   mutate( Comparison = ifelse( `MAX vs PM_log2FoldChange` < 0 & -->
<!--             `POST vs MAX_log2FoldChange` > 0, -->
<!--           "Lower expression in MAX", -->
<!--           ifelse(`MAX vs PM_log2FoldChange` > 0 & -->
<!--             `POST vs MAX_log2FoldChange` < 0, -->
<!--             "Higher expression in MAX",NA)) -->
<!--   ) %>% -->
<!--   filter( !is.na(Comparison)) %>% -->
<!--   left_join(all_genes_palate) -->

<!-- g.b6_domain_max_up <- gost( query = unique( (b6_max_diff_genes %>% -->
<!--                                                  filter( Comparison =="Higher expression in MAX"))$symbol), -->
<!--                            organism = "mmusculus", -->
<!--                            domain_scope = "custom", -->
<!--                            custom_bg = all_genes_palate$symbol, -->
<!--                            evcodes = TRUE -->
<!--                            ) -->
<!-- if(length( g.b6_domain_max_up$result != 0)) g.b6_domain_max_up$result <- g.b6_domain_max_up$result %>% filter(term_size < 660) -->

<!-- g.b6_domain_max_down <- gost( query = unique( (b6_max_diff_genes %>% -->
<!--                                                  filter( Comparison =="Lower expression in MAX"))$symbol), -->
<!--                            organism = "mmusculus", -->
<!--                            domain_scope = "custom", -->
<!--                            custom_bg = all_genes_palate$symbol, -->
<!--                            evcodes = TRUE -->
<!--                            ) -->
<!-- if(length( g.b6_domain_max_down$result != 0)) g.b6_domain_max_down$result <- g.b6_domain_max_down$result %>% filter(term_size < 660) -->


<!-- ``` -->

<!-- ```{r max_diff_genes_table} -->
<!-- #| message: false -->
<!-- #| warning: false -->

<!-- b6_max_diff_genes %>% -->
<!--   select(Comparison, gene_id, symbol, chromosome ) %>% -->
<!--   create_dt() -->

<!-- ``` -->

<!-- Nothing in ORA! -->

<!-- ```{r max_diff_genes_ora_table} -->
<!-- #| message: false -->
<!-- #| warning: false -->
<!-- #| eval: false -->

<!-- g.b6_domain_max_up$result %>% -->
<!--   mutate( Category = "Higher expression in MAX") %>% -->
<!--   rbind( -->
<!--     g.b6_domain_max_down$result %>% -->
<!--       mutate(Category = "Lower expression in MAX") -->
<!--   )  %>% -->
<!--   select( Category, term_name, source, p_value, term_size, intersection_size,intersection) %>%  # intersecion: adding the list of genes identified as overlapping with each category -->
<!--   mutate_if( is.numeric, formatC, digits =2) %>% -->
<!--   create_dt() -->

<!-- ``` -->

<!-- ### Genes differentially expressed in the POST domain -->

<!-- ```{r post_diff_genes_rep_plot} -->
<!-- #| warning: false -->
<!-- #| message: false -->
<!-- #| fig-width: 12 -->
<!-- #| fig-height: 5 -->

<!-- b6_domain_eff_genes_merged %>% -->
<!--   pivot_wider(., id_cols = "gene_id", names_from = Comparison, names_glue = "{Comparison}_{.value}",values_from = c(padj, log2FoldChange) ) %>% -->
<!--    filter( -->
<!--     `POST vs PM_padj` < 0.05 & `POST vs MAX_padj` < 0.05 & -->
<!--     abs(`POST vs PM_log2FoldChange`) > .5 & abs(`POST vs MAX_log2FoldChange`) > .5) %>% -->
<!--   # filter( -->
<!--   #    ( is.na(`MAX vs PM_padj`) | -->
<!--   #        `MAX vs PM_padj` >=  0.05 | -->
<!--   #        is.na(`MAX vs PM_log2FoldChange`) | -->
<!--   #        abs(`MAX vs PM_log2FoldChange`) < .5) -->
<!--   # ) %>% -->
<!--   mutate( Comparison = ifelse( `POST vs PM_log2FoldChange` > 0 & `POST vs MAX_log2FoldChange` > 0, -->
<!--           "Higher expression in POST", -->
<!--           "Lower expression in POST") -->
<!--   ) %>% -->
<!--   filter( !is.na(Comparison)) %>% -->
<!--   select(gene_id, Comparison) %>% -->
<!--   left_join(b6_gene_counts) %>% -->
<!--   ggplot()+ -->
<!--   aes( x = AP_domain, y = count, col = AP_domain)+ -->
<!--   geom_point()+ -->
<!--   #geom_line(aes(group=interaction(gene_id,time, ind)), alpha = 0.2)+ -->
<!--   stat_summary(aes(group=Comparison), fun = mean, geom="line", col = "black")+ -->
<!--   facet_wrap(~Comparison, scale = "free_y")+ -->
<!--   theme_pubclean()+ -->
<!--   scale_y_log10()+ -->
<!--   scale_color_manual(values = domain_colors) -->

<!-- ``` -->

<!-- ```{r post_diff_genes} -->
<!-- #| warning: false -->
<!-- #| message: false -->
<!-- #| cache: true -->

<!-- # MAX vs PM_padj < 0.05 & POST vs PM_padj < 0.05 -->
<!-- b6_post_diff_genes <-  b6_domain_eff_genes_merged %>% -->
<!--   pivot_wider(., id_cols = "gene_id", names_from = Comparison, names_glue = "{Comparison}_{.value}",values_from = c(padj, log2FoldChange) ) %>% -->
<!--   filter( -->
<!--     `POST vs PM_padj` < 0.05 & `POST vs MAX_padj` < 0.05 & -->
<!--     abs(`POST vs PM_log2FoldChange`) > .5 & abs(`POST vs MAX_log2FoldChange`) > .5) %>% -->
<!--   # filter( -->
<!--   #    ( is.na(`MAX vs PM_padj`) | -->
<!--   #        `MAX vs PM_padj` >=  0.05 | -->
<!--   #        is.na(`MAX vs PM_log2FoldChange`) | -->
<!--   #        abs(`MAX vs PM_log2FoldChange`) < .5) -->
<!--   # ) %>% -->
<!--   mutate( Comparison = ifelse( `POST vs PM_log2FoldChange` > 0 & `POST vs MAX_log2FoldChange` > 0, -->
<!--           "Higher expression in POST", -->
<!--           "Lower expression in POST") -->
<!--   ) %>% -->
<!--   left_join(all_genes_palate) -->

<!-- g.b6_domain_post_up <- gost( query = unique( (b6_post_diff_genes %>% -->
<!--                                                  filter( Comparison =="Higher expression in POST"))$symbol), -->
<!--                            organism = "mmusculus", -->
<!--                            domain_scope = "custom", -->
<!--                            custom_bg = all_genes_palate$symbol, -->
<!--                            evcodes = TRUE -->
<!--                            ) -->
<!-- if(length( g.b6_domain_post_up$result != 0)) g.b6_domain_post_up$result <- g.b6_domain_post_up$result %>% filter(term_size < 660) -->

<!-- g.b6_domain_post_down <- gost( query = unique( (b6_post_diff_genes %>% -->
<!--                                                  filter( Comparison =="Lower expression in POST"))$symbol), -->
<!--                            organism = "mmusculus", -->
<!--                            domain_scope = "custom", -->
<!--                            custom_bg = all_genes_palate$symbol, -->
<!--                            evcodes = TRUE -->
<!--                            ) -->
<!-- if(length( g.b6_domain_post_down$result != 0)) g.b6_domain_post_down$result <- g.b6_domain_post_down$result %>% filter(term_size < 660) -->

<!-- ``` -->

<!-- ```{r post_diff_genes_table} -->
<!-- #| message: false -->
<!-- #| warning: false -->

<!-- b6_post_diff_genes %>% -->
<!--   select(Comparison, gene_id, symbol, chromosome ) %>% -->
<!--   create_dt() -->

<!-- ``` -->

<!-- ```{r post_diff_genesora__table} -->
<!-- #| message: false -->
<!-- #| warning: false -->

<!-- # g.b6_domain_post_up$result %>% -->
<!-- #   mutate( Category = "Higher expression in POST") %>% -->
<!-- #   rbind( -->
<!--     g.b6_domain_post_down$result %>% -->
<!--       mutate(Category = "Lower expression in POST") %>%  -->
<!-- #  )  %>% -->
<!--   select( Category, term_name, source, p_value, term_size, intersection_size,intersection) %>%  # intersecion: adding the list of genes identified as overlapping with each category -->
<!--   mutate_if( is.numeric, formatC, digits =2) %>% -->
<!--   create_dt() -->

<!-- ``` -->

<!-- <!-- ### Genes increasing/decreasing gradually across the three domains --> -->

<!-- <!-- ```{r all_domain_diff_genes_rep_plot} --> -->

<!-- <!-- #| message: false --> -->

<!-- <!-- #| warning: false --> -->

<!-- <!-- #| fig-width: 12 --> -->

<!-- <!-- #| fig-height: 5 --> -->

<!-- <!-- b6_domain_eff_genes_merged %>% --> -->

<!-- <!-- pivot_wider(., id_cols = "gene_id", names_from = Comparison, names_glue = "{Comparison}_{.value}",values_from = c(padj, log2FoldChange) ) %>% --> -->

<!-- <!-- filter( --> -->

<!-- <!--    `MAX vs PM_padj` < 0.05 &  `POST vs PM_padj` < 0.05 & `POST vs MAX_padj` < 0.05 & --> -->

<!-- <!--   ( ( (`MAX vs PM_log2FoldChange`) > .5  & --> -->

<!-- <!--         (`POST vs PM_log2FoldChange`) > .5 & --> -->

<!-- <!--         (`POST vs MAX_log2FoldChange`) > .5) | --> -->

<!-- <!--         ( (`MAX vs PM_log2FoldChange`) < -.5  & --> -->

<!-- <!--         (`POST vs PM_log2FoldChange`) < -.5 & --> -->

<!-- <!--         (`POST vs MAX_log2FoldChange`) < -.5) --> -->

<!-- <!--       ) --> -->

<!-- <!--   ) %>% --> -->

<!-- <!--     mutate( Comparison = ifelse( (`MAX vs PM_log2FoldChange`) > 0  & --> -->

<!-- <!--             (`POST vs PM_log2FoldChange`) > 0 & --> -->

<!-- <!--             (`POST vs MAX_log2FoldChange`) > 0, --> -->

<!-- <!--           "PM < MAX < POST", --> -->

<!-- <!--           ifelse((`MAX vs PM_log2FoldChange`) < 0  & --> -->

<!-- <!--             (`POST vs PM_log2FoldChange`) < 0 & --> -->

<!-- <!--             (`POST vs MAX_log2FoldChange`) < 0 , "PM > MAX > POST" , NA)) --> -->

<!-- <!--   ) %>% --> -->

<!-- <!--   filter( !is.na(Comparison)) %>% --> -->

<!-- <!--   select(gene_id, Comparison) %>% --> -->

<!-- <!--   left_join(b6_gene_counts) %>% --> -->

<!-- <!--   ggplot()+ --> -->

<!-- <!--   aes( x = AP_domain, y = count, col = AP_domain)+ --> -->

<!-- <!--   geom_point()+ --> -->

<!-- <!--   #geom_line(aes(group=interaction(gene_id,time, ind)), alpha = 0.2)+ --> -->

<!-- <!--   stat_summary(aes(group=Comparison), fun = mean, geom="line", color = "black")+ --> -->

<!-- <!--   facet_wrap(~Comparison, scale = "free_y")+ --> -->

<!-- <!--   theme_pubclean()+ --> -->

<!-- <!--   scale_y_log10()+ --> -->

<!-- <!--   scale_color_manual(values = domain_colors) --> -->

<!-- <!-- ``` --> -->

<!-- <!-- ```{r domain_diff_genes_all} --> -->

<!-- <!-- #| warning: false --> -->

<!-- <!-- #| message: false --> -->

<!-- <!-- #| cache: true --> -->

<!-- <!-- # Get the list of genes that are up/down regulated PM > MAX > POST or PM < MAX < POST --> -->

<!-- <!-- b6_domain_all_diff_genes <-  b6_domain_eff_genes_merged%>% --> -->

<!-- <!--   pivot_wider(., id_cols = "gene_id", names_from = Comparison, names_glue = "{Comparison}_{.value}",values_from = c(padj, log2FoldChange) ) %>% --> -->

<!-- <!--   filter( --> -->

<!-- <!--    `MAX vs PM_padj` < 0.05 &  `POST vs PM_padj` < 0.05 & `POST vs MAX_padj` < 0.05 & --> -->

<!-- <!--   ( ( (`MAX vs PM_log2FoldChange`) > .5  & --> -->

<!-- <!--         (`POST vs PM_log2FoldChange`) > .5 & --> -->

<!-- <!--         (`POST vs MAX_log2FoldChange`) > .5) | --> -->

<!-- <!--         ( (`MAX vs PM_log2FoldChange`) < -.5  & --> -->

<!-- <!--         (`POST vs PM_log2FoldChange`) < -.5 & --> -->

<!-- <!--         (`POST vs MAX_log2FoldChange`) < -.5) --> -->

<!-- <!--       ) --> -->

<!-- <!--   ) %>% --> -->

<!-- <!--     mutate( Comparison = ifelse( (`MAX vs PM_log2FoldChange`) > 0  & --> -->

<!-- <!--             (`POST vs PM_log2FoldChange`) > 0 & --> -->

<!-- <!--             (`POST vs MAX_log2FoldChange`) > 0, --> -->

<!-- <!--           "PM < MAX < POST", --> -->

<!-- <!--           ifelse((`MAX vs PM_log2FoldChange`) < 0  & --> -->

<!-- <!--             (`POST vs PM_log2FoldChange`) < 0 & --> -->

<!-- <!--             (`POST vs MAX_log2FoldChange`) < 0 , "PM > MAX > POST" , NA)) --> -->

<!-- <!--   ) %>% --> -->

<!-- <!--   left_join(all_genes_palate) %>% --> -->

<!-- <!--   filter( !is.na(Comparison)) --> -->

<!-- <!-- g.b6_domain_all_up <- gost( query = unique( (b6_domain_all_diff_genes %>% --> -->

<!-- <!--                                                  filter( Comparison == "PM < MAX < POST"))$symbol), --> -->

<!-- <!--                            organism = "mmusculus", --> -->

<!-- <!--                            domain_scope = "custom", --> -->

<!-- <!--                            custom_bg = all_genes_palate$symbol, --> -->

<!-- <!--                            evcodes = TRUE --> -->

<!-- <!--                            ) --> -->

<!-- <!-- if( length(g.b6_domain_all_up$result) != 0) g.b6_domain_all_up$result <- g.b6_domain_all_up$result %>% filter(term_size < 660) --> -->

<!-- <!-- g.b6_domain_all_down <- gost( query = unique( (b6_domain_all_diff_genes %>% --> -->

<!-- <!--                                                  filter( Comparison =="PM > MAX > POST"))$symbol), --> -->

<!-- <!--                            organism = "mmusculus", --> -->

<!-- <!--                            domain_scope = "custom", --> -->

<!-- <!--                            custom_bg = all_genes_palate$symbol, --> -->

<!-- <!--                            evcodes = TRUE --> -->

<!-- <!--                            ) --> -->

<!-- <!-- if( length(g.b6_domain_all_down$result) != 0) g.b6_domain_all_down$result <- g.b6_domain_all_down$result %>% filter(term_size < 660) --> -->

<!-- <!-- ``` --> -->

<!-- <!-- ```{r all_diff_genes_table} --> -->

<!-- <!-- #| message: false --> -->

<!-- <!-- #| warning: false --> -->

<!-- <!-- b6_domain_all_diff_genes %>% --> -->

<!-- <!--   select(Comparison, gene_id, symbol, chromosome ) %>% --> -->

<!-- <!--   create_dt() --> -->

<!-- <!-- ``` --> -->

<!-- <!-- ```{r all_diff_genes_ora_table} --> -->

<!-- <!-- #| message: false --> -->

<!-- <!-- #| warning: false --> -->

<!-- <!-- #| eval: false --> -->

<!-- <!-- g.b6_domain_all_up$result %>% --> -->

<!-- <!--    mutate( Category =  "PM < MAX < POST") %>% --> -->

<!-- <!--   rbind( --> -->

<!-- <!--     g.b6_domain_all_down$result %>% --> -->

<!-- <!--       mutate(Category = "PM > MAX > POST") --> -->

<!-- <!--   )  %>% --> -->

<!-- <!--   select( Category, term_name, source, p_value, term_size, intersection_size,intersection) %>%  # intersecion: adding the list of genes identified as overlapping with each category --> -->

<!-- <!--   mutate_if( is.numeric, formatC, digits =2) %>% --> -->

<!-- <!--   create_dt() --> -->

<!-- <!-- ``` --> -->

<!-- <!-- <!-- ::: --> -->

<!-- --\> -->

<!-- ### Genes differentially expressed over developmental time (LB stage) -->

<!-- ```{r b6_stages_diff} -->
<!-- #| warning: false -->
<!-- #| message: false -->
<!-- #| cache: true -->


<!-- g.b6_stage_up <- gost( query = unique( (b6_stage_eff_genes_merged %>% -->
<!--                                                  filter( Comparison =="Upregulated over time"))$symbol), -->
<!--                            organism = "mmusculus", -->
<!--                            domain_scope = "custom", -->
<!--                            custom_bg = all_genes_palate$symbol, -->
<!--                            evcodes = TRUE -->
<!--                            ) -->
<!-- g.b6_stage_up$result <- g.b6_stage_up$result %>% filter(term_size < 660) -->

<!-- g.b6_stage_down <- gost( query = unique( (b6_stage_eff_genes_merged %>% -->
<!--                                                  filter( Comparison =="Downregulated over time"))$symbol), -->
<!--                            organism = "mmusculus", -->
<!--                            domain_scope = "custom", -->
<!--                            custom_bg = all_genes_palate$symbol, -->
<!--                            evcodes = TRUE -->
<!--                            ) -->
<!-- g.b6_stage_down$result <- g.b6_stage_down$result %>% filter(term_size < 660) -->


<!-- ``` -->

<!-- ```{r b6_stage_diff_genes_rep_plot} -->
<!-- #| warning: false -->
<!-- #| message: false -->
<!-- #| fig-width: 12 -->
<!-- #| fig-height: 5 -->

<!-- b6_stage_eff_genes_merged %>%  -->
<!--   select(gene_id, Comparison) %>% -->
<!--   left_join(b6_gene_counts) %>% -->
<!--   ggplot()+ -->
<!--   aes( x = LB_stage, y = count, col = Comparison)+ -->
<!--   geom_point()+ -->
<!--   #geom_line(aes(group=interaction(gene_id,time, ind)), alpha = 0.2)+ -->
<!--   stat_summary(aes(group=Comparison), fun = mean, geom="line")+ -->
<!--   facet_wrap(~Comparison, scale = "free_y")+ -->
<!--   theme_pubclean()+ -->
<!--   scale_y_log10() -->

<!-- ``` -->

<!-- ```{r b6_stages_diff_table} -->
<!-- #| warning: false -->
<!-- #| message: false -->

<!-- b6_stage_eff_genes_merged %>%  -->
<!--   select(Comparison, gene_id, symbol, chromosome) %>% -->
<!--   create_dt() -->


<!-- ``` -->

<!-- ```{r b6_stage_diff_genes_ora_table} -->
<!-- #| message: false -->
<!-- #| warning: false -->

<!-- g.b6_stage_up$result %>% -->
<!--   mutate( Category = "Upregulated over time") %>% -->
<!--   rbind( -->
<!--     g.b6_stage_down$result %>% -->
<!--       mutate(Category = "Downregulated over time") -->
<!--   )  %>% -->
<!--   select( Category, term_name, source, p_value, term_size, intersection_size,intersection) %>%  # intersecion: adding the list of genes identified as overlapping with each category -->
<!--   mutate_if( is.numeric, formatC, digits =2) %>% -->
<!--   create_dt() -->

<!-- ``` -->

<!-- ```{r} -->

<!-- ma = assay(rlog(b6_dds_comp)) -->

<!-- res1 <- DEGreport::degPatterns(ma[unique(b6_domain_by_stage_merged$gene_id),], colData(b6_dds_simple)[,c("Gest_stage","AP_domain"), drop=FALSE] ,col = "AP_domain", time = "Gest_stage") -->

<!-- res2 <- DEGreport::degPatterns(ma[unique(b6_stage_by_domain_merged$gene_id),], colData(b6_dds_simple)[,c("Gest_stage","AP_domain"), drop=FALSE] ,time = "AP_domain",col = "Gest_stage") -->

<!-- res3 <- DEGreport::degPatterns(ma[unique(b6_domain_eff_genes_merged$gene_id),], colData(b6_dds_simple)[,c("Gest_stage","AP_domain"), drop=FALSE] ,time = "AP_domain") -->

<!-- res4 <- DEGreport::degPatterns(ma[unique(b6_stage_eff_genes_merged$gene_id),], colData(b6_dds_simple)[,c("Gest_stage","AP_domain"), drop=FALSE] ,time = "Gest_stage") -->


<!-- ``` -->

<!-- ### Genes with different trends over time in PM domain -->

<!-- ```{r b6_domain_by_stage_lrt} -->
<!-- #| warning: false -->
<!-- #| message: false -->

<!-- # comparing the full model with the interaction term between stage + domain to the reduced model without the interaction. -->
<!-- b6_dds_comp_simple_lrt <- DESeq(b6_dds_coll, test="LRT",  -->
<!--                                 full= b6_comp_model,  -->
<!--                                 reduced = b6_simple_model) -->

<!-- # resultsNames(b6_dds_comp_simple_lrt) -->
<!-- # Let's get the gene list that has a significant difference with/without the interaction term hence is likely to show an interaction effect! -->
<!-- b6_domain_by_stage_lrt <- results( b6_dds_comp_simple_lrt) %>%  -->
<!--   as_tibble( rownames = "gene_id") %>%  -->
<!--   filter( padj < 0.05) %>%  -->
<!--   left_join( all_genes_palate)  -->

<!-- # Now let's get the effects from the full model -->
<!-- b6_dds_comp <- DESeq(b6_dds_coll, betaPrior = FALSE, full=b6_comp_model) -->
<!-- # I am adding LB stage to the interaction term because I am interested in the effect of time for each domain -->
<!-- b6_stage_by_domain_pm <- results( b6_dds_comp, contrast = list(c("LB_stage"))) -->
<!-- b6_stage_by_domain_max <- results( b6_dds_comp, contrast = list(c("LB_stage","AP_domainMAX.LB_stage"))) -->
<!-- b6_stage_by_domain_post <- results( b6_dds_comp, contrast = list(c("LB_stage","AP_domainPOST.LB_stage"))) -->

<!-- b6_domain_by_stage_max_pm <- results( b6_dds_comp, contrast = list(c("AP_domainMAX","AP_domainMAX.LB_stage"))) -->
<!-- b6_domain_by_stage_post_pm <- results( b6_dds_comp, contrast = list(c("AP_domainPOST","AP_domainPOST.LB_stage"))) -->
<!-- b6_domain_by_stage_post_max <- results( b6_dds_comp, contrast = list(c("AP_domainPOST","AP_domainMAX","AP_domainMAX.LB_stage","AP_domainPOST.LB_stage"))) -->

<!-- b6_domain_by_stage_merged <- b6_domain_by_stage_max_pm %>%  -->
<!--   as_tibble( rownames = "gene_id") %>%  -->
<!--   filter( padj < 0.05 &  -->
<!--             abs(log2FoldChange) > .5 & -->
<!--             gene_id %in% b6_domain_by_stage_lrt$gene_id -->
<!--   ) %>%  -->
<!--   mutate( Comparison = "PM") %>%  -->
<!--   rbind( -->
<!--     b6_domain_by_stage_post_pm %>%  -->
<!--       as_tibble(rownames = "gene_id") %>%  -->
<!--       filter( padj < 0.05 & -->
<!--                 abs(log2FoldChange) > .5 & -->
<!--                 gene_id %in% b6_domain_by_stage_lrt$gene_id -->
<!--       ) %>%  -->
<!--       mutate( Comparison = "MAX")  -->
<!--   ) %>%  -->
<!--   rbind( -->
<!--      b6_domain_by_stage_post_max %>%  -->
<!--       as_tibble(rownames = "gene_id") %>%  -->
<!--       filter( padj < 0.05 & -->
<!--                 abs(log2FoldChange) > .5 & -->
<!--                 gene_id %in% b6_domain_by_stage_lrt$gene_id -->
<!--       ) %>%  -->
<!--       mutate( Comparison = "POST")  -->
<!--   ) %>%  -->
<!--   mutate( type = ifelse(log2FoldChange > 0, "Up","Down")) %>% -->
<!--   unite( "Comparison_type",  c("type","Comparison"),  sep = " in ", remove = FALSE) %>% -->
<!--   left_join( all_genes_palate)  -->

<!-- b6_domain_by_stage_gene_counts <-  counts(b6_dds_comp, normalized=TRUE)[unique(b6_domain_by_stage_merged$gene_id),] %>% -->
<!--   as_tibble( rownames = "gene_id") %>% -->
<!--   pivot_longer(2:65, names_to = "sample", values_to = "count") %>% -->
<!--   left_join( -->
<!--     colData(b6_dds_simple) %>%  -->
<!--       as_tibble(rownames = "sample") %>%  -->
<!--       select(sample, LB_stage, AP_domain) -->
<!--   ) -->

<!-- ``` -->

<!-- <!-- I am using likelihood ratio test (LRT) to compare the linear models with and without an interaction between AP domain and LB stage. This test allows us to identify genes that show a significant interaction effect meaning change in their expression will differ depending on the domain. There are `r formatC(nrow(b6_domain_by_stage_merged %>% select(gene_id) %>% distinct()), big.mark =",")` genes that change differently between domains over time. Below is the full gene list. I will characterize them in groups in subsections below. --> -->

<!-- ```{r b6_domain_by_stage_gene_list_table} -->
<!-- #| warning: false -->
<!-- #| message: false -->

<!-- b6_domain_by_stage_merged %>% -->
<!--   group_by(gene_id, symbol, chromosome) %>% -->
<!--   summarise( "Comparison" = paste(Comparison_type, collapse=", ")) %>% -->
<!--   mutate( Comparison = paste(Comparison, " over time")) %>%  -->
<!--   create_dt() -->

<!-- ``` -->

<!-- <!-- ::: {.panel-tabset .nav-pills} --> -->

<!-- ```{r b6_domain_by_stage_pm_diff_genes} -->
<!-- #| warning: false -->
<!-- #| message: false -->
<!-- #| cache: true -->


<!-- # MAX vs PM_padj < 0.05 & POST vs PM_padj < 0.05 -->
<!-- b6_domain_by_stage_pm_diff_genes <-  b6_domain_by_stage_merged %>% -->
<!--   filter(Comparison_type %in% c("Up in PM", "Down in PM")) -->


<!-- g.b6_domain_by_stage_pm_up <- gost( query = unique( (b6_domain_by_stage_pm_diff_genes %>% -->
<!--                                               filter( Comparison_type =="Up in PM"))$symbol), -->
<!--                            organism = "mmusculus", -->
<!--                            domain_scope = "custom", -->
<!--                            custom_bg = all_genes_palate$symbol, -->
<!--                            evcodes = TRUE -->
<!-- ) -->
<!-- g.b6_domain_by_stage_pm_up$result <- g.b6_domain_by_stage_pm_up$result %>% filter(term_size < 660) -->

<!-- g.b6_domain_by_stage_pm_down <- gost( query = unique( (b6_domain_by_stage_pm_diff_genes %>% -->
<!--                                                 filter( Comparison_type =="Down in PM"))$symbol), -->
<!--                              organism = "mmusculus", -->
<!--                              domain_scope = "custom", -->
<!--                              custom_bg = all_genes_palate$symbol, -->
<!--                              evcodes = TRUE -->
<!-- ) -->
<!-- g.b6_domain_by_stage_pm_down$result <- g.b6_domain_by_stage_pm_down$result %>% filter(term_size < 660) -->


<!-- ``` -->

<!-- ```{r b6_domain_by_stage_pm_diff_genes_plot} -->
<!-- #| warning: false -->
<!-- #| message: false -->
<!-- #| fig-width: 12 -->
<!-- #| fig-height: 5 -->

<!-- b6_domain_by_stage_pm_diff_genes %>% -->
<!--   select(gene_id, Comparison_type) %>% -->
<!--   mutate(Comparison_type = paste(Comparison_type, "over time")) %>%  -->
<!--   left_join(b6_domain_by_stage_gene_counts) %>% -->
<!--   ggplot()+ -->
<!--   aes(x = LB_stage, y = count, color = AP_domain, group = AP_domain) +  -->
<!--   geom_point() +  -->
<!--   stat_summary(aes(group=interaction(Comparison_type,AP_domain)), fun = mean, geom="line", size = 1.2, alpha = 0.7)+ -->
<!--   scale_color_manual( values = domain_colors)+ -->
<!--   theme_pubclean()+ -->
<!--   ylab("Gene expression (raw counts)")+ -->
<!--   xlab("LB stage")+ -->
<!--   labs(color = "AP Domain")+ -->
<!--   scale_y_log10()+ -->
<!--   facet_wrap(~Comparison_type) -->


<!-- ``` -->

<!-- ```{r b6_domain_by_stage_pm_diff_genes_table} -->
<!-- #| message: false -->
<!-- #| warning: false -->

<!-- b6_domain_by_stage_pm_diff_genes %>% -->
<!--   select(Comparison_type, gene_id, symbol, chromosome ) %>% -->
<!--   create_dt() -->

<!-- ``` -->

<!-- ```{r b6_domain_by_stage_pm_diff_genes_ora_table} -->
<!-- #| message: false -->
<!-- #| warning: false -->

<!-- g.b6_domain_by_stage_pm_up$result %>% -->
<!--   mutate( Category = "Higher expression in PM") %>% -->
<!--   rbind( -->
<!--     g.b6_domain_by_stage_pm_down$result %>% -->
<!--       mutate(Category = "Lower expression in PM") -->
<!--   )  %>% -->
<!--   select( Category, term_name, source, p_value, term_size, intersection_size,intersection) %>%  # intersecion: adding the list of genes identified as overlapping with each category -->
<!--   mutate_if( is.numeric, formatC, digits =2) %>% -->
<!--   create_dt() -->

<!-- ``` -->

<!-- ### Genes with different trends over time in MAX domain -->

<!-- ```{r b6_domain_by_stage_max_diff_genes} -->
<!-- #| warning: false -->
<!-- #| message: false -->
<!-- #| cache: true -->


<!-- # MAX vs MAX_padj < 0.05 & POST vs MAX_padj < 0.05 -->
<!-- b6_domain_by_stage_max_diff_genes <-  b6_domain_by_stage_merged %>% -->
<!--   filter(Comparison_type %in% c("Up in MAX", "Down in MAX")) -->

<!-- g.b6_domain_by_stage_max_up <- gost( query = unique( (b6_domain_by_stage_max_diff_genes %>% -->
<!--                                                        filter( Comparison_type =="Up in MAX"))$symbol), -->
<!--                                     organism = "mmusculus", -->
<!--                                     domain_scope = "custom", -->
<!--                                     custom_bg = all_genes_palate$symbol, -->
<!--                                     evcodes = TRUE -->
<!-- ) -->
<!-- g.b6_domain_by_stage_max_up$result <- g.b6_domain_by_stage_max_up$result %>% filter(term_size < 660) -->

<!-- g.b6_domain_by_stage_max_down <- gost( query = unique( (b6_domain_by_stage_max_diff_genes %>% -->
<!--                                                          filter( Comparison_type =="Down in MAX"))$symbol), -->
<!--                                       organism = "mmusculus", -->
<!--                                       domain_scope = "custom", -->
<!--                                       custom_bg = all_genes_palate$symbol, -->
<!--                                       evcodes = TRUE -->
<!-- ) -->
<!-- g.b6_domain_by_stage_max_down$result <- g.b6_domain_by_stage_max_down$result %>% filter(term_size < 660) -->


<!-- ``` -->

<!-- ```{r b6_domain_by_stage_max_diff_genes_plot} -->
<!-- #| warning: false -->
<!-- #| message: false -->
<!-- #| fig-width: 12 -->
<!-- #| fig-height: 5 -->

<!-- b6_domain_by_stage_max_diff_genes %>% -->
<!--   select(gene_id, Comparison_type) %>% -->
<!--   mutate(Comparison_type = paste(Comparison_type, "over time")) %>%  -->
<!--   left_join(b6_domain_by_stage_gene_counts) %>% -->
<!--   ggplot()+ -->
<!--   aes(x = LB_stage, y = count, color = AP_domain, group = AP_domain) +  -->
<!--   geom_point() +  -->
<!--   stat_summary(aes(group=interaction(Comparison_type,AP_domain)), fun = mean, geom="line", size = 1.2, alpha = 0.7)+ -->
<!--   scale_color_manual( values = domain_colors)+ -->
<!--   theme_pubclean()+ -->
<!--   ylab("Gene expression (raw counts)")+ -->
<!--   xlab("LB stage")+ -->
<!--   labs(color = "AP Domain")+ -->
<!--   scale_y_log10()+ -->
<!--   facet_wrap(~Comparison_type) -->


<!-- ``` -->

<!-- ```{r b6_domain_by_stage_max_diff_genes_table} -->
<!-- #| message: false -->
<!-- #| warning: false -->

<!-- b6_domain_by_stage_max_diff_genes %>% -->
<!--   select(Comparison_type, gene_id, symbol, chromosome ) %>% -->
<!--   create_dt() -->

<!-- ``` -->

<!-- ```{r b6_domain_by_stage_max_diff_genes_ora_table} -->
<!-- #| message: false -->
<!-- #| warning: false -->

<!-- g.b6_domain_by_stage_max_up$result %>% -->
<!--   mutate( Category = "Higher expression in MAX") %>% -->
<!--   rbind( -->
<!--     g.b6_domain_by_stage_max_down$result %>% -->
<!--       mutate(Category = "Lower expression in MAX") -->
<!--   )  %>% -->
<!--   select( Category, term_name, source, p_value, term_size, intersection_size,intersection) %>%  # intersecion: adding the list of genes identified as overlapping with each category -->
<!--   mutate_if( is.numeric, formatC, digits =2) %>% -->
<!--   create_dt() -->

<!-- ``` -->

<!-- ### Genes with different trends over time in POST domain -->

<!-- ```{r b6_domain_by_stage_post_diff_genes} -->
<!-- #| warning: false -->
<!-- #| message: false -->
<!-- #| cache: true -->


<!-- # POST vs POST_padj < 0.05 & POST vs POST_padj < 0.05 -->
<!-- b6_domain_by_stage_post_diff_genes <-  b6_domain_by_stage_merged %>% -->
<!--   filter(Comparison_type %in% c("Up in POST", "Down in POST")) -->

<!-- g.b6_domain_by_stage_post_up <- gost( query = unique( (b6_domain_by_stage_post_diff_genes %>% -->
<!--                                                        filter( Comparison_type =="Up in POST"))$symbol), -->
<!--                                     organism = "mmusculus", -->
<!--                                     domain_scope = "custom", -->
<!--                                     custom_bg = all_genes_palate$symbol, -->
<!--                                     evcodes = TRUE -->
<!-- ) -->
<!-- g.b6_domain_by_stage_post_up$result <- g.b6_domain_by_stage_post_up$result %>% filter(term_size < 660) -->

<!-- g.b6_domain_by_stage_post_down <- gost( query = unique( (b6_domain_by_stage_post_diff_genes %>% -->
<!--                                                          filter( Comparison_type =="Down in POST"))$symbol), -->
<!--                                       organism = "mmusculus", -->
<!--                                       domain_scope = "custom", -->
<!--                                       custom_bg = all_genes_palate$symbol, -->
<!--                                       evcodes = TRUE -->
<!-- ) -->
<!-- g.b6_domain_by_stage_post_down$result <- g.b6_domain_by_stage_post_down$result %>% filter(term_size < 660) -->


<!-- ``` -->

<!-- ```{r b6_domain_by_stage_post_diff_genes_plot} -->
<!-- #| warning: false -->
<!-- #| message: false -->
<!-- #| fig-width: 12 -->
<!-- #| fig-height: 5 -->

<!-- b6_domain_by_stage_post_diff_genes %>% -->
<!--   select(gene_id, Comparison_type) %>% -->
<!--   mutate(Comparison_type = paste(Comparison_type, "over time")) %>%  -->
<!--   left_join(b6_domain_by_stage_gene_counts) %>% -->
<!--   ggplot()+ -->
<!--   aes(x = LB_stage, y = count, color = AP_domain, group = AP_domain) +  -->
<!--   geom_point() +  -->
<!--   stat_summary(aes(group=interaction(Comparison_type,AP_domain)), fun = mean, geom="line", size = 1.2, alpha = 0.7)+ -->
<!--   scale_color_manual( values = domain_colors)+ -->
<!--   theme_pubclean()+ -->
<!--   ylab("Gene expression (raw counts)")+ -->
<!--   xlab("LB stage")+ -->
<!--   labs(color = "AP Domain")+ -->
<!--   scale_y_log10()+ -->
<!--   facet_wrap(~Comparison_type) -->



<!-- ``` -->

<!-- ```{r b6_domain_by_stage_post_diff_genes_table} -->
<!-- #| message: false -->
<!-- #| warning: false -->

<!-- b6_domain_by_stage_post_diff_genes %>% -->
<!--   select(Comparison_type, gene_id, symbol, chromosome ) %>% -->
<!--   create_dt() -->

<!-- ``` -->

<!-- ```{r b6_domain_by_stage_post_diff_genes_ora_table} -->
<!-- #| message: false -->
<!-- #| warning: false -->

<!-- g.b6_domain_by_stage_post_up$result %>% -->
<!--   mutate( Category = "Higher expression in POST") %>% -->
<!--   rbind( -->
<!--     g.b6_domain_by_stage_post_down$result %>% -->
<!--       mutate(Category = "Lower expression in POST") -->
<!--   )  %>% -->
<!--   select( Category, term_name, source, p_value, term_size, intersection_size,intersection) %>%  # intersecion: adding the list of genes identified as overlapping with each category -->
<!--   mutate_if( is.numeric, formatC, digits =2) %>% -->
<!--   create_dt() -->

<!-- ``` -->

<!-- ### Genes differentially expressed in PM domain across time -->

<!-- ### Genes differentially expressed in MAX domain across time -->

<!-- ### Genes differentially expressed in POST domain across time -->

<!-- <!-- ### Genes increasing/decreasing over time in all domains --> -->

<!-- <!-- ```{r b6_domain_by_stage_all_diff_genes} --> -->

<!-- <!-- #| warning: false --> -->

<!-- <!-- #| message: false --> -->

<!-- <!-- #| cache: true --> -->

<!-- <!-- # POST vs POST_padj < 0.05 & POST vs POST_padj < 0.05 --> -->

<!-- <!-- b6_domain_by_stage_all_diff_genes <-  b6_domain_by_stage_merged %>%  --> -->

<!-- <!--   pivot_wider(., id_cols = "gene_id", names_from = Comparison, names_glue = "{Comparison}_{.value}",values_from = c(padj, log2FoldChange) ) %>%  --> -->

<!-- <!--   filter( --> -->

<!-- <!--     `PM_padj` < 0.05 & `MAX_padj` < 0.05 & `POST_padj` < 0.05 &  --> -->

<!-- <!--       abs(`PM_log2FoldChange`) > .5 & abs(`MAX_log2FoldChange`) > .5 & abs(`POST_log2FoldChange`) > .5 --> -->

<!-- <!--   ) %>% --> -->

<!-- <!--   mutate( Comparison_type = ifelse( `PM_log2FoldChange` > 0 &`MAX_log2FoldChange` > 0 & `POST_log2FoldChange` > 0, --> -->

<!-- <!--                                "Up in all", --> -->

<!-- <!--                                "Down in all") --> -->

<!-- <!--   ) %>%  --> -->

<!-- <!--   left_join(all_genes_palate) --> -->

<!-- <!-- g.b6_domain_by_stage_all_up <- gost( query = unique( (b6_domain_by_stage_all_diff_genes %>% --> -->

<!-- <!--                                                        filter( Comparison_type == "Up in all"))$symbol), --> -->

<!-- <!--                                     organism = "mmusculus", --> -->

<!-- <!--                                     domain_scope = "custom", --> -->

<!-- <!--                                     custom_bg = all_genes_palate$symbol, --> -->

<!-- <!--                                     evcodes = TRUE --> -->

<!-- <!-- ) --> -->

<!-- <!-- g.b6_domain_by_stage_all_up$result <- g.b6_domain_by_stage_all_up$result %>% filter(term_size < 660) --> -->

<!-- <!-- g.b6_domain_by_stage_all_down <- gost( query = unique( (b6_domain_by_stage_all_diff_genes %>% --> -->

<!-- <!--                                                          filter( Comparison_type =="Down in all"))$symbol), --> -->

<!-- <!--                                       organism = "mmusculus", --> -->

<!-- <!--                                       domain_scope = "custom", --> -->

<!-- <!--                                       custom_bg = all_genes_palate$symbol, --> -->

<!-- <!--                                       evcodes = TRUE --> -->

<!-- <!-- ) --> -->

<!-- <!-- g.b6_domain_by_stage_all_down$result <- g.b6_domain_by_stage_all_down$result %>% filter(term_size < 660) --> -->

<!-- <!-- ``` --> -->

<!-- <!-- ```{r b6_domain_by_stage_all_diff_genes_plot} --> -->

<!-- <!-- #| warning: false --> -->

<!-- <!-- #| message: false --> -->

<!-- <!-- #| fig-width: 12 --> -->

<!-- <!-- #| fig-height: 5 --> -->

<!-- <!-- b6_domain_by_stage_all_diff_genes %>% --> -->

<!-- <!--   select(gene_id, Comparison_type) %>% --> -->

<!-- <!--   mutate(Comparison_type = paste(Comparison_type, "over time")) %>%  --> -->

<!-- <!--   left_join(b6_domain_by_stage_gene_counts) %>% --> -->

<!-- <!--   ggplot()+ --> -->

<!-- <!--   aes(x = LB_stage, y = count, color = AP_domain, group = AP_domain) +  --> -->

<!-- <!--   geom_point() +  --> -->

<!-- <!--   stat_summary(fun.y=mean, geom="line") + --> -->

<!-- <!--   scale_color_manual( values = domain_colors)+ --> -->

<!-- <!--   theme_pubclean()+ --> -->

<!-- <!--   ylab("Gene expression (raw counts)")+ --> -->

<!-- <!--   xlab("LB stage")+ --> -->

<!-- <!--   labs(color = "AP Domain")+ --> -->

<!-- <!--   scale_y_log10()+ --> -->

<!-- <!--   facet_wrap(~Comparison_type) --> -->

<!-- <!-- ``` --> -->

<!-- <!-- ```{r b6_domain_by_stage_all_diff_genes_table} --> -->

<!-- <!-- #| message: false --> -->

<!-- <!-- #| warning: false --> -->

<!-- <!-- b6_domain_by_stage_all_diff_genes %>% --> -->

<!-- <!--   select(Comparison_type, gene_id, symbol, chromosome ) %>% --> -->

<!-- <!--   create_dt() --> -->

<!-- <!-- ``` --> -->

<!-- <!-- ```{r b6_domain_by_stage_all_diff_genes_ora_table} --> -->

<!-- <!-- #| message: false --> -->

<!-- <!-- #| warning: false --> -->

<!-- <!-- g.b6_domain_by_stage_all_up$result %>% --> -->

<!-- <!--   mutate( Category = "Higher expression in all") %>% --> -->

<!-- <!--   rbind( --> -->

<!-- <!--     g.b6_domain_by_stage_all_down$result %>% --> -->

<!-- <!--       mutate(Category = "Lower expression in all") --> -->

<!-- <!--   )  %>% --> -->

<!-- <!--   select( Category, term_name, source, p_value, term_size, intersection_size,intersection) %>%  # intersecion: adding the list of genes identified as overlapping with each category --> -->

<!-- <!--   mutate_if( is.numeric, formatC, digits =2) %>% --> -->

<!-- <!--   create_dt() --> -->

<!-- <!-- ``` --> -->

<!-- <!-- <!-- ::: --> -->

<!-- --\> -->

<!-- <!-- :::: --> -->

<!-- ## Differential gene expression in palate domains across developmental time in CAST mice -->

<!-- ```{r cast_gest_domain} -->
<!-- #| warning: false -->
<!-- #| message: false -->

<!-- cast_comp_samples <- sample_annot %>%  -->
<!--   filter(strain %in% c("CAST")) %>%  -->
<!--   separate(sample, sep = "_", into = c("s","e","d","ind","rep"), remove = F) %>%  -->
<!--   select(-e,-d) %>%  -->
<!--   mutate( rep = ifelse( is.na(rep),1,rep)) %>%  -->
<!--   unite( "unique_sampleid" , c(s,ind,AP_domain,Gest_stage),sep ="_", remove = F) # adding an individual column to match the domains to the same animal/embryo and rep column for replicates -->


<!-- cast_coldata <- cast_comp_samples %>%  -->
<!--   select(sample, sex,ind, unique_sampleid, rep, AP_domain, Gest_stage, strain,LB_stage) %>%  -->
<!--   filter(!is.na(sex) ) %>%  -->
<!--   mutate_if(is.character, as.factor) %>%  -->
<!--   mutate( AP_domain = factor(AP_domain, levels = c("PM","MAX","POST")) ) %>%  -->
<!--   column_to_rownames("sample")  -->

<!-- cast_cts <- round(raw_expr_mat[all_genes_palate$gene_id,rownames(cast_coldata), drop = F]) -->

<!-- # let's make the dds object then collapse the technical replicates -->
<!-- cast_dds <- DESeqDataSetFromMatrix( countData = cast_cts,  -->
<!--                                   colData = cast_coldata, -->
<!--                                   design = ~1) -->

<!-- cast_dds_coll <- collapseReplicates(cast_dds, cast_dds$unique_sampleid) -->
<!-- # colData(cast_dds_coll) -->
<!-- # colData(cast_dds) -->

<!-- # let's setup the model -->
<!-- cast_simple_model <- model.matrix(~ AP_domain + AP_domain:ind+ LB_stage , data = colData(cast_dds_coll)) -->
<!-- cast_comp_model <- model.matrix(~ AP_domain + AP_domain:ind + LB_stage +  AP_domain:LB_stage, data = colData(cast_dds_coll)) -->

<!-- # all.zero <- apply(cast_comp_model, 2, function(x) all(x==0)) -->
<!-- # idx <- which(all.zero) -->
<!-- # cast_comp_model <- cast_comp_model[,-idx] -->


<!-- cast_dds_simple <- DESeq(cast_dds_coll, betaPrior = FALSE, full=cast_simple_model) -->
<!-- #cast_dds_comp <- DESeq(cast_dds_coll, betaPrior = FALSE, full=cast_comp_model) -->
<!-- #resultsNames(cast_dds_simple) -->
<!-- #resultsNames(cast_dds_comp) -->

<!-- ``` -->

<!-- There are 1,879 unique genes differentially expressed across domains (adjusted p-value \< 0.05 and 1.5 fold change). -->
<!-- Then, I am using likelihood ratio test (LRT) to compare a linear model with and without an interaction between AP domain and LB stage. -->
<!-- This test allows us to identify genes that change differently over developmental time across different domains. -->
<!-- There are 887 genes that change differently between domains over time. -->

<!-- ::: {#CAST_results .panel-tabset .nav-pills} -->
<!-- <!-- ### Genes differentially expressed across palate domains (AP domain effect) --> -->

<!-- ### Genes differentially expressed in the PM domain -->

<!-- ```{r cast_gest_domain_eff} -->
<!-- #| warning: false -->
<!-- #| message: false -->

<!-- cast_domain_eff_max_pm <- results(cast_dds_simple, contrast = list("AP_domainMAX")) -->
<!-- cast_domain_eff_post_pm <- results(cast_dds_simple, contrast = list("AP_domainPOST")) -->
<!-- cast_domain_eff_post_max <- results(cast_dds_simple, contrast = list("AP_domainPOST","AP_domainMAX")) -->

<!-- cast_domain_eff_merged <- cast_domain_eff_max_pm %>% -->
<!--   as_tibble( rownames = "gene_id") %>% -->
<!--   mutate( Comparison = "MAX vs PM") %>% -->
<!--   rbind( -->
<!--     cast_domain_eff_post_pm %>% -->
<!--       as_tibble( rownames = "gene_id") %>% -->
<!--       mutate( Comparison = "POST vs PM") -->
<!--   ) %>% -->
<!--   rbind( -->
<!--     cast_domain_eff_post_max %>% -->
<!--       as_tibble( rownames = "gene_id") %>% -->
<!--       mutate( Comparison = "POST vs MAX") -->
<!--   )%>% -->
<!--   left_join( all_genes_palate) -->

<!-- cast_domain_eff_gene_counts <- counts(cast_dds_simple, normalized=TRUE)[unique(cast_domain_eff_merged$gene_id),] %>% -->
<!--   as_tibble( rownames = "gene_id") %>% -->
<!--   pivot_longer(2:46, names_to = "sample", values_to = "count") %>% -->
<!--   separate( sample, into = c("strain","ind","domain","stage"), sep = "_") %>% -->
<!--   mutate( time = as.numeric(substr(stage, 2,5)), domain = factor(domain, levels = c("PM","MAX","POST"))) -->

<!-- ``` -->

<!-- <!-- There are `r formatC(nrow(cast_domain_eff_merged %>% filter( padj < 0.05 & !is.na(padj) & abs(log2FoldChange) > .5) %>% select(gene_id) %>% distinct()), big.mark = ",")` unique genes differentially expressed across domains (adjusted p-value \< 0.05 and 1.5 fold change). --> -->

<!-- <!-- ::: {.panel-tabset .nav-pills} --> -->

<!-- ```{r cast_pm_diff_genes_rep_plot} -->
<!-- #| warning: false -->
<!-- #| message: false -->
<!-- #| fig-width: 12 -->
<!-- #| fig-height: 5 -->

<!-- cast_domain_eff_merged %>% -->
<!--   pivot_wider(., id_cols = "gene_id", names_from = Comparison, names_glue = "{Comparison}_{.value}",values_from = c(padj, log2FoldChange) ) %>% -->
<!--   filter( -->
<!--     `MAX vs PM_padj` < 0.05 & `POST vs PM_padj` < 0.05 & -->
<!--     abs(`MAX vs PM_log2FoldChange`) > .5 & abs(`POST vs PM_log2FoldChange`) > .5) %>% -->
<!--   # filter( -->
<!--   #    ( is.na(`POST vs MAX_padj`) | -->
<!--   #        `POST vs MAX_padj` >=  0.05 | -->
<!--   #        is.na(`POST vs MAX_log2FoldChange`) | -->
<!--   #        abs(`POST vs MAX_log2FoldChange`) < .5) -->
<!--   # ) %>% -->
<!--   mutate( Comparison = ifelse( `MAX vs PM_log2FoldChange` > 0 &`POST vs PM_log2FoldChange` > 0, -->
<!--           "Lower expression in PM", -->
<!--           "Higher expression in PM") -->
<!--   ) %>% -->
<!--   select(gene_id, Comparison) %>% -->
<!--   left_join(cast_domain_eff_gene_counts) %>% -->
<!--   ggplot()+ -->
<!--   aes( x = domain, y = count, col = Comparison)+ -->
<!--   geom_point()+ -->
<!--   #geom_line(aes(group=interaction(gene_id,time, ind)), alpha = 0.2)+ -->
<!--   stat_summary(aes(group=Comparison), fun = mean, geom="line")+ -->
<!--   facet_wrap(~Comparison, scale = "free_y")+ -->
<!--   theme_pubclean()+ -->
<!--   scale_y_log10() -->

<!-- ``` -->

<!-- ```{r cast_pm_diff_genes} -->
<!-- #| warning: false -->
<!-- #| message: false -->
<!-- #| cache: true -->


<!-- # MAX vs PM_padj < 0.05 & POST vs PM_padj < 0.05 -->
<!-- cast_pm_diff_genes <-  cast_domain_eff_merged %>% -->
<!--   pivot_wider(., id_cols = "gene_id", names_from = Comparison, names_glue = "{Comparison}_{.value}",values_from = c(padj, log2FoldChange) ) %>% -->
<!--   filter( -->
<!--     `MAX vs PM_padj` < 0.05 & `POST vs PM_padj` < 0.05 & -->
<!--     abs(`MAX vs PM_log2FoldChange`) > .5 & abs(`POST vs PM_log2FoldChange`) > .5) %>% -->
<!--   # filter( -->
<!--   #    ( is.na(`POST vs MAX_padj`) | -->
<!--   #        `POST vs MAX_padj` >=  0.05 | -->
<!--   #        is.na(`POST vs MAX_log2FoldChange`) | -->
<!--   #        abs(`POST vs MAX_log2FoldChange`) < .5) -->
<!--   # ) %>% -->
<!--   mutate( Comparison = ifelse( `MAX vs PM_log2FoldChange` > 0 &`POST vs PM_log2FoldChange` > 0, -->
<!--           "Lower expression in PM", -->
<!--           "Higher expression in PM") -->
<!--   ) %>% -->
<!--   left_join(all_genes_palate) -->

<!-- g.cast_domain_pm_up <- gost( query = unique( (cast_pm_diff_genes %>% -->
<!--                                                  filter( Comparison =="Higher expression in PM"))$symbol), -->
<!--                            organism = "mmusculus", -->
<!--                            domain_scope = "custom", -->
<!--                            custom_bg = all_genes_palate$symbol, -->
<!--                            evcodes = TRUE -->
<!--                            ) -->
<!-- g.cast_domain_pm_up$result <- g.cast_domain_pm_up$result %>% filter(term_size < 660) -->

<!-- g.cast_domain_pm_down <- gost( query = unique( (cast_pm_diff_genes %>% -->
<!--                                                  filter( Comparison =="Lower expression in PM"))$symbol), -->
<!--                            organism = "mmusculus", -->
<!--                            domain_scope = "custom", -->
<!--                            custom_bg = all_genes_palate$symbol, -->
<!--                            evcodes = TRUE -->
<!--                            ) -->
<!-- g.cast_domain_pm_down$result <- g.cast_domain_pm_down$result %>% filter(term_size < 660) -->


<!-- ``` -->

<!-- ```{r cast_pm_diff_genes_table} -->
<!-- #| message: false -->
<!-- #| warning: false -->

<!-- cast_pm_diff_genes %>% -->
<!--   select(Comparison, gene_id, symbol, chromosome ) %>% -->
<!--   create_dt() -->

<!-- ``` -->

<!-- ```{r cast_pm_diff_genes_ora_table} -->
<!-- #| message: false -->
<!-- #| warning: false -->

<!-- g.cast_domain_pm_up$result %>% -->
<!--   mutate( Category = "Higher expression in PM") %>% -->
<!--   rbind( -->
<!--     g.cast_domain_pm_down$result %>% -->
<!--       mutate(Category = "Lower expression in PM") -->
<!--   )  %>% -->
<!--   select( Category, term_name, source, p_value, term_size, intersection_size,intersection) %>%  # intersecion: adding the list of genes identified as overlapping with each category -->
<!--   mutate_if( is.numeric, formatC, digits =2) %>% -->
<!--   create_dt() -->

<!-- ``` -->

<!-- ### Genes differentially expressed in the MAX domain -->

<!-- ```{r cast_max_diff_genes_rep_plot} -->
<!-- #| warning: false -->
<!-- #| message: false -->
<!-- #| fig-width: 12 -->
<!-- #| fig-height: 5 -->

<!-- cast_domain_eff_merged %>% -->
<!--   pivot_wider(., id_cols = "gene_id", names_from = Comparison, names_glue = "{Comparison}_{.value}",values_from = c(padj, log2FoldChange) ) %>% -->
<!--   filter( -->
<!--     `MAX vs PM_padj` < 0.05 & `POST vs MAX_padj` < 0.05 & -->
<!--       abs(`MAX vs PM_log2FoldChange`) > .5 & abs(`POST vs MAX_log2FoldChange`) > .5) %>% -->
<!--   # filter( -->
<!--   #    ( is.na(`POST vs PM_padj`) | -->
<!--   #        `POST vs PM_padj` >=  0.05 | -->
<!--   #        is.na(`POST vs PM_log2FoldChange`) | -->
<!--   #        abs(`POST vs PM_log2FoldChange`) < .5) -->
<!--   # )  %>% -->
<!--   mutate( Comparison = ifelse( `MAX vs PM_log2FoldChange` < 0 & -->
<!--                                  `POST vs MAX_log2FoldChange` > 0, -->
<!--                                "Lower expression in MAX", -->
<!--                                ifelse(`MAX vs PM_log2FoldChange` > 0 & -->
<!--                                         `POST vs MAX_log2FoldChange` < 0, -->
<!--                                       "Higher expression in MAX",NA)) -->
<!--   ) %>% -->
<!--   filter( !is.na(Comparison)) %>% -->
<!--   select(gene_id, Comparison) %>% -->
<!--   left_join(cast_domain_eff_gene_counts) %>% -->
<!--   ggplot()+ -->
<!--   aes( x = domain, y = count, col = Comparison)+ -->
<!--   geom_point()+ -->
<!--   #geom_line(aes(group=interaction(gene_id,time, ind)), alpha = 0.2)+ -->
<!--   stat_summary(aes(group=Comparison), fun = mean, geom="line")+ -->
<!--   facet_wrap(~Comparison, scale = "free_y")+ -->
<!--   theme_pubclean()+ -->
<!--   scale_y_log10() -->

<!-- ``` -->

<!-- ```{r cast_max_diff_genes} -->
<!-- #| warning: false -->
<!-- #| message: false -->
<!-- #| cache: true -->


<!-- # MAX vs PM_padj < 0.05 & POST vs PM_padj < 0.05 -->
<!-- cast_max_diff_genes <-  cast_domain_eff_merged %>% -->
<!--   pivot_wider(., id_cols = "gene_id", names_from = Comparison, names_glue = "{Comparison}_{.value}",values_from = c(padj, log2FoldChange) ) %>% -->
<!--   filter( -->
<!--     `MAX vs PM_padj` < 0.05 & `POST vs MAX_padj` < 0.05 & -->
<!--       abs(`MAX vs PM_log2FoldChange`) > .5 & abs(`POST vs MAX_log2FoldChange`) > .5) %>% -->
<!--   # filter( -->
<!--   #    ( is.na(`POST vs PM_padj`) | -->
<!--   #        `POST vs PM_padj` >=  0.05 | -->
<!--   #        is.na(`POST vs PM_log2FoldChange`) | -->
<!--   #        abs(`POST vs PM_log2FoldChange`) < .5) -->
<!--   # )  %>% -->
<!--   mutate( Comparison = ifelse( `MAX vs PM_log2FoldChange` < 0 & -->
<!--                                  `POST vs MAX_log2FoldChange` > 0, -->
<!--                                "Lower expression in MAX", -->
<!--                                ifelse(`MAX vs PM_log2FoldChange` > 0 & -->
<!--                                         `POST vs MAX_log2FoldChange` < 0, -->
<!--                                       "Higher expression in MAX",NA)) -->
<!--   ) %>% -->
<!--   filter( !is.na(Comparison)) %>% -->
<!--   left_join(all_genes_palate) -->

<!-- g.cast_domain_max_up <- gost( query = unique( (cast_max_diff_genes %>% -->
<!--                                                filter( Comparison =="Higher expression in MAX"))$symbol), -->
<!--                             organism = "mmusculus", -->
<!--                             domain_scope = "custom", -->
<!--                             custom_bg = all_genes_palate$symbol, -->
<!--                             evcodes = TRUE -->
<!-- ) -->
<!-- g.cast_domain_max_up$result <- g.cast_domain_max_up$result %>% filter(term_size < 660) -->

<!-- g.cast_domain_max_down <- gost( query = unique( (cast_max_diff_genes %>% -->
<!--                                                  filter( Comparison =="Lower expression in MAX"))$symbol), -->
<!--                               organism = "mmusculus", -->
<!--                               domain_scope = "custom", -->
<!--                               custom_bg = all_genes_palate$symbol, -->
<!--                               evcodes = TRUE -->
<!-- ) -->
<!-- g.cast_domain_max_down$result <- g.cast_domain_max_down$result %>% filter(term_size < 660) -->


<!-- ``` -->

<!-- ```{r cast_max_diff_genes_table} -->
<!-- #| message: false -->
<!-- #| warning: false -->

<!-- cast_max_diff_genes %>% -->
<!--   select(Comparison, gene_id, symbol, chromosome ) %>% -->
<!--   create_dt() -->

<!-- ``` -->

<!-- ```{r cast_max_diff_genes_ora_table} -->
<!-- #| message: false -->
<!-- #| warning: false -->

<!-- g.cast_domain_max_up$result %>% -->
<!--   mutate( Category = "Higher expression in MAX") %>% -->
<!--   rbind( -->
<!--     g.cast_domain_max_down$result %>% -->
<!--       mutate(Category = "Lower expression in MAX") -->
<!--   )  %>% -->
<!--   select( Category, term_name, source, p_value, term_size, intersection_size,intersection) %>%  # intersecion: adding the list of genes identified as overlapping with each category -->
<!--   mutate_if( is.numeric, formatC, digits =2) %>% -->
<!--   create_dt() -->

<!-- ``` -->

<!-- ### Genes differentially expressed in the POST domain -->

<!-- ```{r cast_post_diff_genes_rep_plot} -->
<!-- #| warning: false -->
<!-- #| message: false -->
<!-- #| fig-width: 12 -->
<!-- #| fig-height: 5 -->

<!-- cast_domain_eff_merged %>% -->
<!--   pivot_wider(., id_cols = "gene_id", names_from = Comparison, names_glue = "{Comparison}_{.value}",values_from = c(padj, log2FoldChange) ) %>% -->
<!--    filter( -->
<!--     `POST vs PM_padj` < 0.05 & `POST vs MAX_padj` < 0.05 & -->
<!--     abs(`POST vs PM_log2FoldChange`) > .5 & abs(`POST vs MAX_log2FoldChange`) > .5) %>% -->
<!--   # filter( -->
<!--   #    ( is.na(`MAX vs PM_padj`) | -->
<!--   #        `MAX vs PM_padj` >=  0.05 | -->
<!--   #        is.na(`MAX vs PM_log2FoldChange`) | -->
<!--   #        abs(`MAX vs PM_log2FoldChange`) < .5) -->
<!--   # ) %>% -->
<!--   mutate( Comparison = ifelse( `POST vs PM_log2FoldChange` > 0 & `POST vs MAX_log2FoldChange` > 0, -->
<!--           "Higher expression in POST", -->
<!--           "Lower expression in POST") -->
<!--   ) %>% -->
<!--   filter( !is.na(Comparison)) %>% -->
<!--   select(gene_id, Comparison) %>% -->
<!--   left_join(cast_domain_eff_gene_counts) %>% -->
<!--   ggplot()+ -->
<!--   aes( x = domain, y = count, col = Comparison)+ -->
<!--   geom_point()+ -->
<!--   #geom_line(aes(group=interaction(gene_id,time, ind)), alpha = 0.2)+ -->
<!--   stat_summary(aes(group=Comparison), fun = mean, geom="line")+ -->
<!--   facet_wrap(~Comparison, scale = "free_y")+ -->
<!--   theme_pubclean()+ -->
<!--   scale_y_log10() -->

<!-- ``` -->

<!-- ```{r cast_post_diff_genes} -->
<!-- #| warning: false -->
<!-- #| message: false -->
<!-- #| cache: true -->


<!-- # MAX vs PM_padj < 0.05 & POST vs PM_padj < 0.05 -->
<!-- cast_post_diff_genes <-  cast_domain_eff_merged %>% -->
<!--   pivot_wider(., id_cols = "gene_id", names_from = Comparison, names_glue = "{Comparison}_{.value}",values_from = c(padj, log2FoldChange) ) %>% -->
<!--   filter( -->
<!--     `POST vs PM_padj` < 0.05 & `POST vs MAX_padj` < 0.05 & -->
<!--     abs(`POST vs PM_log2FoldChange`) > .5 & abs(`POST vs MAX_log2FoldChange`) > .5) %>% -->
<!--   # filter( -->
<!--   #    ( is.na(`MAX vs PM_padj`) | -->
<!--   #        `MAX vs PM_padj` >=  0.05 | -->
<!--   #        is.na(`MAX vs PM_log2FoldChange`) | -->
<!--   #        abs(`MAX vs PM_log2FoldChange`) < .5) -->
<!--   # ) %>% -->
<!--   mutate( Comparison = ifelse( `POST vs PM_log2FoldChange` > 0 & `POST vs MAX_log2FoldChange` > 0, -->
<!--           "Higher expression in POST", -->
<!--           "Lower expression in POST") -->
<!--   ) %>% -->
<!--   left_join(all_genes_palate) -->

<!-- g.cast_domain_post_up <- gost( query = unique( (cast_post_diff_genes %>% -->
<!--                                                  filter( Comparison =="Higher expression in POST"))$symbol), -->
<!--                            organism = "mmusculus", -->
<!--                            domain_scope = "custom", -->
<!--                            custom_bg = all_genes_palate$symbol, -->
<!--                            evcodes = TRUE -->
<!--                            ) -->
<!-- g.cast_domain_post_up$result <- g.cast_domain_post_up$result %>% filter(term_size < 660) -->

<!-- g.cast_domain_post_down <- gost( query = unique( (cast_post_diff_genes %>% -->
<!--                                                  filter( Comparison =="Lower expression in POST"))$symbol), -->
<!--                            organism = "mmusculus", -->
<!--                            domain_scope = "custom", -->
<!--                            custom_bg = all_genes_palate$symbol, -->
<!--                            evcodes = TRUE -->
<!--                            ) -->
<!-- g.cast_domain_post_down$result <- g.cast_domain_post_down$result %>% filter(term_size < 660) -->

<!-- ``` -->

<!-- ```{r cast_post_diff_genes_table} -->
<!-- #| message: false -->
<!-- #| warning: false -->

<!-- cast_post_diff_genes %>% -->
<!--   select(Comparison, gene_id, symbol, chromosome ) %>% -->
<!--   create_dt() -->

<!-- ``` -->

<!-- ```{r cast_post_diff_genesora__table} -->
<!-- #| message: false -->
<!-- #| warning: false -->

<!-- g.cast_domain_post_up$result %>% -->
<!--   mutate( Category = "Higher expression in POST") %>% -->
<!--   rbind( -->
<!--     g.cast_domain_post_down$result %>% -->
<!--       mutate(Category = "Lower expression in POST") -->
<!--   )  %>% -->
<!--   select( Category, term_name, source, p_value, term_size, intersection_size,intersection) %>%  # intersecion: adding the list of genes identified as overlapping with each category -->
<!--   mutate_if( is.numeric, formatC, digits =2) %>% -->
<!--   create_dt() -->

<!-- ``` -->

<!-- ### Genes gradually differentially expressed across all the three domains -->

<!-- ```{r cast_all_domain_diff_genes_rep_plot} -->
<!-- #| message: false -->
<!-- #| warning: false -->
<!-- #| fig-width: 12 -->
<!-- #| fig-height: 5 -->

<!-- cast_domain_eff_merged %>% -->
<!-- pivot_wider(., id_cols = "gene_id", names_from = Comparison, names_glue = "{Comparison}_{.value}",values_from = c(padj, log2FoldChange) ) %>% -->
<!-- filter( -->
<!--    `MAX vs PM_padj` < 0.05 &  `POST vs PM_padj` < 0.05 & `POST vs MAX_padj` < 0.05 & -->
<!--   ( ( (`MAX vs PM_log2FoldChange`) > .5  & -->
<!--         (`POST vs PM_log2FoldChange`) > .5 & -->
<!--         (`POST vs MAX_log2FoldChange`) > .5) | -->

<!--         ( (`MAX vs PM_log2FoldChange`) < -.5  & -->
<!--         (`POST vs PM_log2FoldChange`) < -.5 & -->
<!--         (`POST vs MAX_log2FoldChange`) < -.5) -->
<!--       ) -->
<!--   ) %>% -->
<!--     mutate( Comparison = ifelse( (`MAX vs PM_log2FoldChange`) > 0  & -->
<!--             (`POST vs PM_log2FoldChange`) > 0 & -->
<!--             (`POST vs MAX_log2FoldChange`) > 0, -->
<!--           "PM < MAX < POST", -->
<!--           ifelse((`MAX vs PM_log2FoldChange`) < 0  & -->
<!--             (`POST vs PM_log2FoldChange`) < 0 & -->
<!--             (`POST vs MAX_log2FoldChange`) < 0 , "PM > MAX > POST" , NA)) -->
<!--   ) %>% -->
<!--   filter( !is.na(Comparison)) %>% -->
<!--   select(gene_id, Comparison) %>% -->
<!--   left_join(cast_domain_eff_gene_counts) %>% -->
<!--   ggplot()+ -->
<!--   aes( x = domain, y = count, col = Comparison)+ -->
<!--   geom_point()+ -->
<!--   #geom_line(aes(group=interaction(gene_id,time, ind)), alpha = 0.2)+ -->
<!--   stat_summary(aes(group=Comparison), fun = mean, geom="line")+ -->
<!--   facet_wrap(~Comparison, scale = "free_y")+ -->
<!--   theme_pubclean()+ -->
<!--   scale_y_log10() -->

<!-- ``` -->

<!-- ```{r cast_domain_diff_genes_all} -->
<!-- #| warning: false -->
<!-- #| message: false -->
<!-- #| cache: true -->


<!-- # Get the list of genes that are up/down regulated PM > MAX > POST or PM < MAX < POST -->
<!-- cast_domain_all_diff_genes <-  cast_domain_eff_merged %>% -->
<!--   pivot_wider(., id_cols = "gene_id", names_from = Comparison, names_glue = "{Comparison}_{.value}",values_from = c(padj, log2FoldChange) ) %>% -->
<!--   filter( -->
<!--    `MAX vs PM_padj` < 0.05 &  `POST vs PM_padj` < 0.05 & `POST vs MAX_padj` < 0.05 & -->
<!--   ( ( (`MAX vs PM_log2FoldChange`) > .5  & -->
<!--         (`POST vs PM_log2FoldChange`) > .5 & -->
<!--         (`POST vs MAX_log2FoldChange`) > .5) | -->

<!--         ( (`MAX vs PM_log2FoldChange`) < -.5  & -->
<!--         (`POST vs PM_log2FoldChange`) < -.5 & -->
<!--         (`POST vs MAX_log2FoldChange`) < -.5) -->
<!--       ) -->
<!--   ) %>% -->
<!--     mutate( Comparison = ifelse( (`MAX vs PM_log2FoldChange`) > 0  & -->
<!--             (`POST vs PM_log2FoldChange`) > 0 & -->
<!--             (`POST vs MAX_log2FoldChange`) > 0, -->
<!--           "PM < MAX < POST", -->
<!--           ifelse((`MAX vs PM_log2FoldChange`) < 0  & -->
<!--             (`POST vs PM_log2FoldChange`) < 0 & -->
<!--             (`POST vs MAX_log2FoldChange`) < 0 , "PM > MAX > POST" , NA)) -->
<!--   ) %>% -->
<!--   left_join(all_genes_palate) %>% -->
<!--   filter( !is.na(Comparison)) -->

<!-- g.cast_domain_all_up <- gost( query = unique( (cast_domain_all_diff_genes %>% -->
<!--                                                  filter( Comparison == "PM < MAX < POST"))$symbol), -->
<!--                            organism = "mmusculus", -->
<!--                            domain_scope = "custom", -->
<!--                            custom_bg = all_genes_palate$symbol, -->
<!--                            evcodes = TRUE -->
<!--                            ) -->
<!-- if( length(g.cast_domain_all_up$result) != 0) g.cast_domain_all_up$result <- g.cast_domain_all_up$result %>% filter(term_size < 660) -->

<!-- g.cast_domain_all_down <- gost( query = unique( (cast_domain_all_diff_genes %>% -->
<!--                                                  filter( Comparison =="PM > MAX > POST"))$symbol), -->
<!--                            organism = "mmusculus", -->
<!--                            domain_scope = "custom", -->
<!--                            custom_bg = all_genes_palate$symbol, -->
<!--                            evcodes = TRUE -->
<!--                            ) -->
<!-- g.cast_domain_all_down$result <- g.cast_domain_all_down$result %>% filter(term_size < 660) -->

<!-- ``` -->

<!-- ```{r cast_all_diff_genes_table} -->
<!-- #| message: false -->
<!-- #| warning: false -->

<!-- cast_domain_all_diff_genes %>% -->
<!--   select(Comparison, gene_id, symbol, chromosome ) %>% -->
<!--   create_dt() -->

<!-- ``` -->

<!-- ```{r cast_all_diff_genes_ora_table} -->
<!-- #| message: false -->
<!-- #| warning: false -->

<!-- g.cast_domain_all_up$result %>% -->
<!--    mutate( Category =  "PM < MAX < POST") %>% -->
<!--   rbind( -->
<!--     g.cast_domain_all_down$result %>% -->
<!--       mutate(Category = "PM > MAX > POST") -->
<!--   )  %>% -->
<!--   select( Category, term_name, source, p_value, term_size, intersection_size,intersection) %>%  # intersecion: adding the list of genes identified as overlapping with each category -->
<!--   mutate_if( is.numeric, formatC, digits =2) %>% -->
<!--   create_dt() -->

<!-- ``` -->

<!-- <!-- ::: --> -->

<!-- ### Genes differentially expressed over developmental time (LB stage) -->

<!-- ```{r cast_stages_diff} -->
<!-- #| warning: false -->
<!-- #| message: false -->
<!-- #| cache: true -->

<!-- cast_stage_diff <- results(cast_dds_simple, name = ("LB_stage")) -->
<!-- cast_stage_eff_merged <- cast_stage_diff %>%  -->
<!--   as_tibble(rownames = "gene_id") %>%  -->
<!--   filter( padj < 0.05 & !is.na(padj) & abs(log2FoldChange) >= .5) -->

<!-- cast_stage_eff_gene_counts <- counts(cast_dds_simple, normalized=TRUE)[unique(cast_stage_eff_merged$gene_id),] %>% -->
<!--   as_tibble( rownames = "gene_id") %>% -->
<!--   pivot_longer(2:46, names_to = "sample", values_to = "count") %>% -->
<!--   left_join( -->
<!--     colData(cast_dds_simple) %>%  -->
<!--       as_tibble(rownames = "sample") %>%  -->
<!--       select(sample, LB_stage, AP_domain) -->
<!--   ) -->

<!-- cast_stage_diff_genes <- cast_stage_eff_merged %>%  -->
<!--   left_join(all_genes_palate) %>%  -->
<!--   mutate( Comparison = case_when( log2FoldChange >0 ~ "Upregulated over time", -->
<!--                                   log2FoldChange <0 ~"Downregulated over time") -->
<!--           )  -->

<!-- g.cast_stage_up <- gost( query = unique( (cast_stage_diff_genes %>% -->
<!--                                                  filter( Comparison =="Upregulated over time"))$symbol), -->
<!--                            organism = "mmusculus", -->
<!--                            domain_scope = "custom", -->
<!--                            custom_bg = all_genes_palate$symbol, -->
<!--                            evcodes = TRUE -->
<!--                            ) -->
<!-- g.cast_stage_up$result <- g.cast_stage_up$result %>% filter(term_size < 660) -->

<!-- g.cast_stage_down <- gost( query = unique( (cast_stage_diff_genes %>% -->
<!--                                                  filter( Comparison =="Downregulated over time"))$symbol), -->
<!--                            organism = "mmusculus", -->
<!--                            domain_scope = "custom", -->
<!--                            custom_bg = all_genes_palate$symbol, -->
<!--                            evcodes = TRUE -->
<!--                            ) -->
<!-- g.cast_stage_down$result <- g.cast_stage_down$result %>% filter(term_size < 660) -->


<!-- ``` -->

<!-- ```{r cast_stage_diff_genes_rep_plot} -->
<!-- #| warning: false -->
<!-- #| message: false -->
<!-- #| fig-width: 12 -->
<!-- #| fig-height: 5 -->

<!-- cast_stage_diff_genes %>%  -->
<!--   select(gene_id, Comparison) %>% -->
<!--   left_join(cast_stage_eff_gene_counts) %>% -->
<!--   ggplot()+ -->
<!--   aes( x = LB_stage, y = count, col = Comparison)+ -->
<!--   geom_point()+ -->
<!--   #geom_line(aes(group=interaction(gene_id,time, ind)), alpha = 0.2)+ -->
<!--   stat_summary(aes(group=Comparison), fun = mean, geom="line")+ -->
<!--   facet_wrap(~Comparison, scale = "free_y")+ -->
<!--   theme_pubclean()+ -->
<!--   scale_y_log10() -->

<!-- ``` -->

<!-- ```{r cast_stages_diff_table} -->
<!-- #| warning: false -->
<!-- #| message: false -->

<!-- cast_stage_diff_genes %>%  -->
<!--   select(Comparison, gene_id, symbol, chromosome) %>% -->
<!--   create_dt() -->


<!-- ``` -->

<!-- ```{r cast_stage_diff_genes_ora_table} -->
<!-- #| message: false -->
<!-- #| warning: false -->

<!-- g.cast_stage_up$result %>% -->
<!--   mutate( Category = "Upregulated over time") %>% -->
<!--   rbind( -->
<!--     g.cast_stage_down$result %>% -->
<!--       mutate(Category = "Downregulated over time") -->
<!--   )  %>% -->
<!--   select( Category, term_name, source, p_value, term_size, intersection_size,intersection) %>%  # intersecion: adding the list of genes identified as overlapping with each category -->
<!--   mutate_if( is.numeric, formatC, digits =2) %>% -->
<!--   create_dt() -->

<!-- ``` -->

<!-- <!-- ### Genes differentially expressed in domains across developmental time --> -->

<!-- ### Genes differentially expressed over time in PM domain -->

<!-- ```{r cast_domain_by_stage_lrt} -->
<!-- #| warning: false -->
<!-- #| message: false -->

<!-- # comparing the full model with the interaction term between stage + domain to the reduced model without the interaction. -->
<!-- cast_dds_comp_simple_lrt <- DESeq(cast_dds_coll, test="LRT",  -->
<!--                                 full= cast_comp_model,  -->
<!--                                 reduced = cast_simple_model) -->

<!-- # resultsNames(cast_dds_comp_simple_lrt) -->
<!-- # Let's get the gene list that has a significant difference with/without the interaction term hence is likely to show an interaction effect! -->
<!--   cast_domain_by_stage_lrt <- results( cast_dds_comp_simple_lrt) %>%  -->
<!--   as_tibble( rownames = "gene_id") %>%  -->
<!--   filter( padj < 0.05) %>%  -->
<!--   left_join( all_genes_palate)  -->

<!-- # Now let's get the effects from the full model -->
<!-- cast_dds_comp <- DESeq(cast_dds_coll, betaPrior = FALSE, full=cast_comp_model) -->
<!-- # I am adding LB stage to the interaction term because I am interested in the effect of time for each domain -->
<!-- cast_domain_by_stage_pm <- results( cast_dds_comp, contrast = list(c("LB_stage"))) -->
<!-- cast_domain_by_stage_max <- results( cast_dds_comp, contrast = list(c("LB_stage","AP_domainMAX.LB_stage"))) -->
<!-- cast_domain_by_stage_post <- results( cast_dds_comp, contrast = list(c("LB_stage","AP_domainPOST.LB_stage"))) -->


<!-- cast_domain_by_stage_merged <- cast_domain_by_stage_pm %>%  -->
<!--   as_tibble( rownames = "gene_id") %>%  -->
<!--   filter( padj < 0.05 &  -->
<!--             abs(log2FoldChange) > .5 & -->
<!--             gene_id %in% cast_domain_by_stage_lrt$gene_id -->
<!--   ) %>%  -->
<!--   mutate( Comparison = "PM") %>%  -->
<!--   rbind( -->
<!--     cast_domain_by_stage_max %>%  -->
<!--       as_tibble(rownames = "gene_id") %>%  -->
<!--       filter( padj < 0.05 & -->
<!--                 abs(log2FoldChange) > .5 & -->
<!--                 gene_id %in% cast_domain_by_stage_lrt$gene_id -->
<!--       ) %>%  -->
<!--       mutate( Comparison = "MAX")  -->
<!--   ) %>%  -->
<!--   rbind( -->
<!--     cast_domain_by_stage_post %>%  -->
<!--       as_tibble(rownames = "gene_id") %>%  -->
<!--       filter( padj < 0.05 & -->
<!--                 abs(log2FoldChange) > .5 & -->
<!--                 gene_id %in% cast_domain_by_stage_lrt$gene_id -->
<!--       ) %>%  -->
<!--       mutate( Comparison = "POST")  -->
<!--   ) %>%  -->
<!--   mutate( type = ifelse(log2FoldChange >0, "Up","Down")) %>%  -->
<!--   unite( "Comparison_type",  c("type","Comparison"),  sep = " in ", remove = FALSE) %>%  -->
<!--   left_join( all_genes_palate)  -->

<!-- cast_domain_by_stage_gene_counts <-  counts(cast_dds_comp, normalized=TRUE)[unique(cast_domain_by_stage_merged$gene_id),] %>% -->
<!--   as_tibble( rownames = "gene_id") %>% -->
<!--   pivot_longer(2:46, names_to = "sample", values_to = "count") %>% -->
<!--   left_join( -->
<!--     colData(cast_dds_simple) %>%  -->
<!--       as_tibble(rownames = "sample") %>%  -->
<!--       select(sample, LB_stage, AP_domain) -->
<!--   ) -->

<!-- ``` -->

<!-- <!-- I am using likelihood ratio test (LRT) to compare a linear model with and without an interaction between AP domain and LB stage. --> -->

<!-- <!-- This test allows us to identify genes that change differently over developmental time across different domains. --> -->

<!-- <!-- There are `r formatC(nrow(cast_domain_by_stage_merged %>% select(gene_id) %>% distinct()), big.mark =",")` genes that change differently between domains over time. Below is the full gene list. I will characterize them in groups in subsections below. --> -->

<!-- ```{r cast_domain_by_stage_gene_list_table} -->
<!-- #| warning: false -->
<!-- #| message: false -->

<!-- cast_domain_by_stage_merged %>%  -->
<!--   group_by(gene_id, symbol, chromosome) %>%  -->
<!--   summarise( "Comparison" = paste(Comparison_type, collapse=", ")) %>%  -->
<!--   mutate(Comparison = paste(Comparison, "over time")) %>%  -->
<!--   create_dt() -->

<!-- ``` -->

<!-- <!-- ::: {.panel-tabset .nav-pills} --> -->

<!-- ```{r cast_domain_by_stage_pm_diff_genes} -->
<!-- #| warning: false -->
<!-- #| message: false -->
<!-- #| cache: true -->


<!-- # MAX vs PM_padj < 0.05 & POST vs PM_padj < 0.05 -->
<!-- cast_domain_by_stage_pm_diff_genes <-  cast_domain_by_stage_merged %>% -->
<!--   filter(Comparison_type %in% c("Up in PM", "Down in PM")) -->

<!-- g.cast_domain_by_stage_pm_up <- gost( query = unique( (cast_domain_by_stage_pm_diff_genes %>% -->
<!--                                                        filter( Comparison_type =="Up in PM"))$symbol), -->
<!--                                     organism = "mmusculus", -->
<!--                                     domain_scope = "custom", -->
<!--                                     custom_bg = all_genes_palate$symbol, -->
<!--                                     evcodes = TRUE -->
<!-- ) -->
<!-- g.cast_domain_by_stage_pm_up$result <- g.cast_domain_by_stage_pm_up$result %>% filter(term_size < 660) -->

<!-- g.cast_domain_by_stage_pm_down <- gost( query = unique( (cast_domain_by_stage_pm_diff_genes %>% -->
<!--                                                          filter( Comparison_type =="Down in PM"))$symbol), -->
<!--                                       organism = "mmusculus", -->
<!--                                       domain_scope = "custom", -->
<!--                                       custom_bg = all_genes_palate$symbol, -->
<!--                                       evcodes = TRUE -->
<!-- ) -->
<!-- g.cast_domain_by_stage_pm_down$result <- g.cast_domain_by_stage_pm_down$result %>% filter(term_size < 660) -->


<!-- ``` -->

<!-- ```{r cast_domain_by_stage_pm_diff_genes_plot} -->
<!-- #| warning: false -->
<!-- #| message: false -->
<!-- #| fig-width: 12 -->
<!-- #| fig-height: 5 -->

<!-- cast_domain_by_stage_pm_diff_genes %>% -->
<!--   select(gene_id, Comparison_type) %>% -->
<!--   mutate(Comparison_type = paste(Comparison_type, "over time")) %>%  -->
<!--   left_join(cast_domain_by_stage_gene_counts) %>% -->
<!--   ggplot()+ -->
<!--   aes(x = LB_stage, y = count, color = AP_domain, group = AP_domain) +  -->
<!--   geom_point() +  -->
<!--   stat_summary(aes(group=interaction(Comparison_type,AP_domain)), fun = mean, geom="line", size = 1.2, alpha = 0.7)+ -->
<!--   scale_color_manual( values = domain_colors)+ -->
<!--   theme_pubclean()+ -->
<!--   ylab("Gene expression (raw counts)")+ -->
<!--   xlab("LB stage")+ -->
<!--   labs(color = "AP Domain")+ -->
<!--   scale_y_log10()+ -->
<!--   facet_wrap(~Comparison_type) -->


<!-- ``` -->

<!-- ```{r cast_domain_by_stage_pm_diff_genes_table} -->
<!-- #| message: false -->
<!-- #| warning: false -->

<!-- cast_domain_by_stage_pm_diff_genes %>% -->
<!--   select(Comparison_type, gene_id, symbol, chromosome ) %>% -->
<!--   create_dt() -->

<!-- ``` -->

<!-- ```{r cast_domain_by_stage_pm_diff_genes_ora_table} -->
<!-- #| message: false -->
<!-- #| warning: false -->

<!-- g.cast_domain_by_stage_pm_up$result %>% -->
<!--   mutate( Category = "Higher expression in PM") %>% -->
<!--   rbind( -->
<!--     g.cast_domain_by_stage_pm_down$result %>% -->
<!--       mutate(Category = "Lower expression in PM") -->
<!--   )  %>% -->
<!--   select( Category, term_name, source, p_value, term_size, intersection_size,intersection) %>%  # intersecion: adding the list of genes identified as overlapping with each category -->
<!--   mutate_if( is.numeric, formatC, digits =2) %>% -->
<!--   create_dt() -->

<!-- ``` -->

<!-- ### Genes differentially expressed over time in MAX domain -->

<!-- ```{r cast_domain_by_stage_max_diff_genes} -->
<!-- #| warning: false -->
<!-- #| message: false -->
<!-- #| cache: true -->


<!-- # MAX vs MAX_padj < 0.05 & POST vs MAX_padj < 0.05 -->
<!-- cast_domain_by_stage_max_diff_genes <-  cast_domain_by_stage_merged %>% -->
<!--   filter(Comparison_type %in% c("Up in MAX", "Down in MAX")) -->

<!-- g.cast_domain_by_stage_max_up <- gost( query = unique( (cast_domain_by_stage_max_diff_genes %>% -->
<!--                                                         filter( Comparison_type =="Up in MAX"))$symbol), -->
<!--                                      organism = "mmusculus", -->
<!--                                      domain_scope = "custom", -->
<!--                                      custom_bg = all_genes_palate$symbol, -->
<!--                                      evcodes = TRUE -->
<!-- ) -->
<!-- g.cast_domain_by_stage_max_up$result <- g.cast_domain_by_stage_max_up$result %>% filter(term_size < 660) -->

<!-- g.cast_domain_by_stage_max_down <- gost( query = unique( (cast_domain_by_stage_max_diff_genes %>% -->
<!--                                                           filter( Comparison_type =="Down in MAX"))$symbol), -->
<!--                                        organism = "mmusculus", -->
<!--                                        domain_scope = "custom", -->
<!--                                        custom_bg = all_genes_palate$symbol, -->
<!--                                        evcodes = TRUE -->
<!-- ) -->
<!-- g.cast_domain_by_stage_max_down$result <- g.cast_domain_by_stage_max_down$result %>% filter(term_size < 660) -->


<!-- ``` -->

<!-- ```{r cast_domain_by_stage_max_diff_genes_plot} -->
<!-- #| warning: false -->
<!-- #| message: false -->
<!-- #| fig-width: 12 -->
<!-- #| fig-height: 5 -->

<!-- cast_domain_by_stage_max_diff_genes %>% -->
<!--   select(gene_id, Comparison_type) %>% -->
<!--   mutate(Comparison_type = paste(Comparison_type, "over time")) %>%  -->
<!--   left_join(cast_domain_by_stage_gene_counts) %>% -->
<!--   ggplot()+ -->
<!--   aes(x = LB_stage, y = count, color = AP_domain, group = AP_domain) +  -->
<!--   geom_point() +  -->
<!--   stat_summary(aes(group=interaction(Comparison_type,AP_domain)), fun = mean, geom="line", size = 1.2, alpha = 0.7)+ -->
<!--   scale_color_manual( values = domain_colors)+ -->
<!--   theme_pubclean()+ -->
<!--   ylab("Gene expression (raw counts)")+ -->
<!--   xlab("LB stage")+ -->
<!--   labs(color = "AP Domain")+ -->
<!--   scale_y_log10()+ -->
<!--   facet_wrap(~Comparison_type) -->


<!-- ``` -->

<!-- ```{r cast_domain_by_stage_max_diff_genes_table} -->
<!-- #| message: false -->
<!-- #| warning: false -->

<!-- cast_domain_by_stage_max_diff_genes %>% -->
<!--   select(Comparison_type, gene_id, symbol, chromosome ) %>% -->
<!--   create_dt() -->

<!-- ``` -->

<!-- ```{r cast_domain_by_stage_max_diff_genes_ora_table} -->
<!-- #| message: false -->
<!-- #| warning: false -->

<!-- g.cast_domain_by_stage_max_up$result %>% -->
<!--   mutate( Category = "Higher expression in MAX") %>% -->
<!--   rbind( -->
<!--     g.cast_domain_by_stage_max_down$result %>% -->
<!--       mutate(Category = "Lower expression in MAX") -->
<!--   )  %>% -->
<!--   select( Category, term_name, source, p_value, term_size, intersection_size,intersection) %>%  # intersecion: adding the list of genes identified as overlapping with each category -->
<!--   mutate_if( is.numeric, formatC, digits =2) %>% -->
<!--   create_dt() -->

<!-- ``` -->

<!-- ### Genes differentially expressed over time in POST domain -->

<!-- ```{r cast_domain_by_stage_post_diff_genes} -->
<!-- #| warning: false -->
<!-- #| message: false -->
<!-- #| cache: true -->


<!-- # POST vs POST_padj < 0.05 & POST vs POST_padj < 0.05 -->
<!-- cast_domain_by_stage_post_diff_genes <-  cast_domain_by_stage_merged %>% -->
<!--   filter(Comparison_type %in% c("Up in POST", "Down in POST")) -->

<!-- g.cast_domain_by_stage_post_up <- gost( query = unique( (cast_domain_by_stage_post_diff_genes %>% -->
<!--                                                          filter( Comparison_type =="Up in POST"))$symbol), -->
<!--                                       organism = "mmusculus", -->
<!--                                       domain_scope = "custom", -->
<!--                                       custom_bg = all_genes_palate$symbol, -->
<!--                                       evcodes = TRUE -->
<!-- ) -->
<!-- g.cast_domain_by_stage_post_up$result <- g.cast_domain_by_stage_post_up$result %>% filter(term_size < 660) -->

<!-- g.cast_domain_by_stage_post_down <- gost( query = unique( (cast_domain_by_stage_post_diff_genes %>% -->
<!--                                                            filter( Comparison_type =="Down in POST"))$symbol), -->
<!--                                         organism = "mmusculus", -->
<!--                                         domain_scope = "custom", -->
<!--                                         custom_bg = all_genes_palate$symbol, -->
<!--                                         evcodes = TRUE -->
<!-- ) -->
<!-- g.cast_domain_by_stage_post_down$result <- g.cast_domain_by_stage_post_down$result %>% filter(term_size < 660) -->


<!-- ``` -->

<!-- ```{r cast_domain_by_stage_post_diff_genes_plot} -->
<!-- #| warning: false -->
<!-- #| message: false -->
<!-- #| fig-width: 12 -->
<!-- #| fig-height: 5 -->

<!-- cast_domain_by_stage_post_diff_genes %>% -->
<!--   select(gene_id, Comparison_type) %>% -->
<!--   mutate(Comparison_type = paste(Comparison_type, "over time")) %>%  -->
<!--   left_join(cast_domain_by_stage_gene_counts) %>% -->
<!--   ggplot()+ -->
<!--   aes(x = LB_stage, y = count, color = AP_domain, group = AP_domain) +  -->
<!--   geom_point() +  -->
<!--   stat_summary(aes(group=interaction(Comparison_type,AP_domain)), fun = mean, geom="line", size = 1.2, alpha = 0.7)+ -->
<!--   scale_color_manual( values = domain_colors)+ -->
<!--   theme_pubclean()+ -->
<!--   ylab("Gene expression (raw counts)")+ -->
<!--   xlab("LB stage")+ -->
<!--   labs(color = "AP Domain")+ -->
<!--   scale_y_log10()+ -->
<!--   facet_wrap(~Comparison_type) -->


<!-- ``` -->

<!-- ```{r cast_domain_by_stage_post_diff_genes_table} -->
<!-- #| message: false -->
<!-- #| warning: false -->

<!-- cast_domain_by_stage_post_diff_genes %>% -->
<!--   select(Comparison_type, gene_id, symbol, chromosome ) %>% -->
<!--   create_dt() -->

<!-- ``` -->

<!-- ```{r cast_domain_by_stage_post_diff_genes_ora_table} -->
<!-- #| message: false -->
<!-- #| warning: false -->

<!-- g.cast_domain_by_stage_post_up$result %>% -->
<!--   mutate( Category = "Higher expression in POST") %>% -->
<!--   rbind( -->
<!--     g.cast_domain_by_stage_post_down$result %>% -->
<!--       mutate(Category = "Lower expression in POST") -->
<!--   )  %>% -->
<!--   select( Category, term_name, source, p_value, term_size, intersection_size,intersection) %>%  # intersecion: adding the list of genes identified as overlapping with each category -->
<!--   mutate_if( is.numeric, formatC, digits =2) %>% -->
<!--   create_dt() -->

<!-- ``` -->

<!-- ### Genes increasing/decreasing over time in all domains -->

<!-- ```{r cast_domain_by_stage_all_diff_genes} -->
<!-- #| warning: false -->
<!-- #| message: false -->
<!-- #| cache: true -->


<!-- # POST vs POST_padj < 0.05 & POST vs POST_padj < 0.05 -->
<!-- cast_domain_by_stage_all_diff_genes <-  cast_domain_by_stage_merged %>%  -->
<!--   pivot_wider(., id_cols = "gene_id", names_from = Comparison, names_glue = "{Comparison}_{.value}",values_from = c(padj, log2FoldChange) ) %>%  -->
<!--   filter( -->
<!--     `PM_padj` < 0.05 & `MAX_padj` < 0.05 & `POST_padj` < 0.05 &  -->
<!--       abs(`PM_log2FoldChange`) > .5 & abs(`MAX_log2FoldChange`) > .5 & abs(`POST_log2FoldChange`) > .5 -->
<!--   ) %>% -->
<!--   mutate( Comparison_type = ifelse( `PM_log2FoldChange` > 0 &`MAX_log2FoldChange` > 0 & `POST_log2FoldChange` > 0, -->
<!--                                     "Up in all", -->
<!--                                     "Down in all") -->
<!--   ) %>%  -->
<!--   left_join(all_genes_palate) -->

<!-- g.cast_domain_by_stage_all_up <- gost( query = unique( (cast_domain_by_stage_all_diff_genes %>% -->
<!--                                                         filter( Comparison_type == "Up in all"))$symbol), -->
<!--                                      organism = "mmusculus", -->
<!--                                      domain_scope = "custom", -->
<!--                                      custom_bg = all_genes_palate$symbol, -->
<!--                                      evcodes = TRUE -->
<!-- ) -->
<!-- if(length(g.cast_domain_by_stage_all_up$result) != 0) g.cast_domain_by_stage_all_up$result <- g.cast_domain_by_stage_all_up$result %>% filter(term_size < 660) -->

<!-- g.cast_domain_by_stage_all_down <- gost( query = unique( (cast_domain_by_stage_all_diff_genes %>% -->
<!--                                                           filter( Comparison_type =="Down in all"))$symbol), -->
<!--                                        organism = "mmusculus", -->
<!--                                        domain_scope = "custom", -->
<!--                                        custom_bg = all_genes_palate$symbol, -->
<!--                                        evcodes = TRUE -->
<!-- ) -->
<!-- if(length(g.cast_domain_by_stage_all_down$result) != 0) g.cast_domain_by_stage_all_down$result <- g.cast_domain_by_stage_all_down$result %>% filter(term_size < 660) -->


<!-- ``` -->

<!-- ```{r cast_domain_by_stage_all_diff_genes_plot} -->
<!-- #| warning: false -->
<!-- #| message: false -->
<!-- #| fig-width: 12 -->
<!-- #| fig-height: 5 -->

<!-- cast_domain_by_stage_all_diff_genes %>% -->
<!--   select(gene_id, Comparison_type) %>% -->
<!--   mutate(Comparison_type = paste(Comparison_type, "over time")) %>%  -->
<!--   left_join(cast_domain_by_stage_gene_counts) %>% -->
<!--   ggplot()+ -->
<!--   aes(x = LB_stage, y = count, color = AP_domain, group = AP_domain) +  -->
<!--   geom_point() +  -->
<!--   stat_summary(aes(group=interaction(Comparison_type,AP_domain)), fun = mean, geom="line", size = 1.2, alpha = 0.7)+ -->
<!--   scale_color_manual( values = domain_colors)+ -->
<!--   theme_pubclean()+ -->
<!--   ylab("Gene expression (raw counts)")+ -->
<!--   xlab("LB stage")+ -->
<!--   labs(color = "AP Domain")+ -->
<!--   scale_y_log10()+ -->
<!--   facet_wrap(~Comparison_type) -->


<!-- ``` -->

<!-- ```{r cast_domain_by_stage_all_diff_genes_table} -->
<!-- #| message: false -->
<!-- #| warning: false -->

<!-- cast_domain_by_stage_all_diff_genes %>% -->
<!--   select(Comparison_type, gene_id, symbol, chromosome ) %>% -->
<!--   create_dt() -->

<!-- ``` -->

<!-- ```{r cast_domain_by_stage_all_diff_genes_ora_table} -->
<!-- #| message: false -->
<!-- #| warning: false -->

<!-- g.cast_domain_by_stage_all_up$result %>% -->
<!--   mutate( Category = "Higher expression in all") %>% -->
<!--   # rbind( -->
<!--   #   g.cast_domain_by_stage_all_down$result %>% -->
<!--   #     mutate(Category = "Lower expression in all") -->
<!--   # )  %>% -->
<!--   select( Category, term_name, source, p_value, term_size, intersection_size,intersection) %>%  # intersecion: adding the list of genes identified as overlapping with each category -->
<!--   mutate_if( is.numeric, formatC, digits =2) %>% -->
<!--   create_dt() -->

<!-- ``` -->

<!-- <!-- ::: --> -->
<!-- ::: -->

<!-- ## Comparing B6 and CAST strains across AP domains and developmental time -->

<!-- ::: {#B6_vs_CAST_results .panel-tabset .nav-pills} -->
<!-- ### Getting the main strain effect using the simple model without interactions -->

<!-- ```{r strain_eff_simple_model} -->
<!-- #| warning: false -->
<!-- #| message: false -->

<!-- b6_cast_samples <- sample_annot %>% -->
<!--   filter(strain %in% c("B6","CAST")) %>% -->
<!--   separate(sample, sep = "_", into = c("s","e","d","ind","rep"), remove = F) %>% -->
<!--   select(-e,-d) %>% -->
<!--   mutate( rep = ifelse( is.na(rep),1,rep)) %>% -->
<!--   unite( "unique_sampleid" , c(s,ind,AP_domain,Gest_stage),sep ="_", remove = F) -->


<!-- # using deseq2 with interactions -->
<!-- coldata <- b6_cast_samples %>% -->
<!--   select(sample,unique_sampleid, sex,ind, rep, AP_domain, Gest_stage, strain, LB_stage) %>% -->
<!--   #filter( rep ==1) %>% -->
<!--   filter(!is.na(sex) ) %>% -->
<!--   mutate( AP_domain = factor(AP_domain, levels = c("PM","MAX","POST")) ) %>%  -->
<!--   column_to_rownames("sample") -->

<!-- cts <- round(raw_expr_mat[all_genes_palate$gene_id,rownames(coldata), drop = F]) -->

<!-- # let's make the dds object then collapse the technical replicates -->
<!-- strain_dds <- DESeqDataSetFromMatrix( countData = cts, -->
<!--                                       colData = coldata, -->
<!--                                       design = ~1) -->

<!-- strain_dds_coll <- collapseReplicates(strain_dds, strain_dds$unique_sampleid) -->

<!-- # https://bioconductor.org/packages/devel/bioc/vignettes/DESeq2/inst/doc/DESeq2.html#levels-without-samples -->
<!-- # the domains are from the same animal! So I need to add that to the covariate matrix + try to add that info to deseq design. see: -->
<!-- # https://bioconductor.org/packages/devel/bioc/vignettes/DESeq2/inst/doc/DESeq2.html#group-specific-condition-effects-individuals-nested-within-groups -->
<!-- # I am not adding interactions for sex, mainly because we can't really parse them out and also I don't believe there to be significant interactions -->
<!-- strain_simple_model <- model.matrix(~ strain + AP_domain + LB_stage + AP_domain:ind, -->
<!--                                   data = colData(strain_dds_coll)) -->


<!-- # all.zero <- apply(strain_simple_model, 2, function(x) all(x==0)) -->
<!-- # idx <- which(all.zero) -->
<!-- # strain_simple_model <- strain_simple_model[,-idx] -->

<!-- strain_dds_simple <- DESeq(strain_dds_coll, betaPrior = FALSE, full=strain_simple_model) -->

<!-- # resultsNames(strain_dds_simple) -->


<!-- ``` -->

<!-- ```{r simple_mod_strain_eff} -->
<!-- #| warning: false -->
<!-- #| message: false -->
<!-- #| cache: true -->

<!-- strain_eff_genes <- results(strain_dds_simple, contrast = list(c("strainCAST")) ) %>%  -->
<!--   as_tibble( rownames = "gene_id") %>%  -->
<!--   filter( padj < 0.05, abs(log2FoldChange) > .5) %>%  -->
<!--   left_join(all_genes_palate) %>%  -->
<!--   mutate( Comparison = ifelse( `log2FoldChange` < 0, -->
<!--           "Lower expression in CAST", -->
<!--           "Higher expression in CAST") -->
<!--   ) -->

<!-- g.strain_eff_cast_up <- gost( query = unique( (strain_eff_genes %>% -->
<!--                                                 filter(log2FoldChange > 0))$symbol), -->
<!--                            organism = "mmusculus", -->
<!--                            domain_scope = "custom", -->
<!--                            custom_bg = all_genes_palate$symbol, -->
<!--                            evcodes = TRUE -->
<!--                            ) -->
<!-- g.strain_eff_cast_up$result <- g.strain_eff_cast_up$result %>% filter(term_size < 660) -->


<!-- g.strain_eff_cast_down <- gost( query = unique( (strain_eff_genes %>% -->
<!--                                                 filter(log2FoldChange < 0))$symbol), -->
<!--                            organism = "mmusculus", -->
<!--                            domain_scope = "custom", -->
<!--                            custom_bg = all_genes_palate$symbol, -->
<!--                            evcodes = TRUE -->
<!--                            ) -->
<!-- g.strain_eff_cast_down$result <- g.strain_eff_cast_down$result %>% filter(term_size < 660) -->



<!-- ``` -->

<!-- ```{r simple_mod_strain_eff_table} -->
<!-- #| message: false -->
<!-- #| warning: false -->


<!-- strain_eff_genes  %>% -->
<!--   select(Comparison, gene_id, symbol, chromosome , padj, log2FoldChange) %>% -->
<!--   mutate( padj = formatC(padj, digits = 2,format = "e"), -->
<!--           log2FoldChange = formatC(log2FoldChange, digits = 2, format = "g")) %>%  -->
<!--   create_dt() -->

<!-- ``` -->

<!-- ```{r simple_mod_strain_ora_table} -->
<!-- #| message: false -->
<!-- #| warning: false -->

<!-- g.strain_eff_cast_up$result %>% -->
<!--   mutate( Category = "Higher expression in CAST") %>% -->
<!--   rbind( -->
<!--     g.strain_eff_cast_down$result %>% -->
<!--       mutate(Category = "Lower expression in CAST") -->
<!--   )  %>% -->
<!--   select( Category, term_name, source, p_value, term_size, intersection_size,intersection) %>%  # intersecion: adding the list of genes identified as overlapping with each category -->
<!--   mutate_if( is.numeric, formatC, digits =2) %>% -->
<!--   create_dt() -->


<!-- ``` -->

<!-- ### Using the model with interaction terms to look at strain effects in each domain across time -->

<!-- ```{r strain_eff_by_time_ind_domains} -->
<!-- #| warning: false -->
<!-- #| message: false -->

<!-- # pm domain -->
<!-- # subset samples to pm domain  -->
<!-- b6_cast_samples_pm <- sample_annot %>% -->
<!--   filter(strain %in% c("B6","CAST")) %>% -->
<!--   filter( AP_domain == "PM") %>%  -->
<!--   separate(sample, sep = "_", into = c("s","e","d","ind","rep"), remove = F) %>% -->
<!--   select(-e,-d) %>% -->
<!--   mutate( rep = ifelse( is.na(rep),1,rep)) %>% -->
<!--   unite( "unique_sampleid" , c(s,ind,AP_domain,Gest_stage),sep ="_", remove = F) -->
<!-- coldata_pm <- b6_cast_samples_pm %>% -->
<!--   select(sample,unique_sampleid, sex,ind, rep, AP_domain, Gest_stage, strain, LB_stage) %>% -->
<!--   #filter( rep ==1) %>% -->
<!--   filter(!is.na(sex) ) %>% -->
<!--   #mutate( AP_domain = factor(AP_domain, levels = c("PM","MAX","POST")) ) %>%  -->
<!--   column_to_rownames("sample") -->
<!-- cts_pm <- round(raw_expr_mat[all_genes_palate$gene_id,rownames(coldata_pm), drop = F]) -->
<!-- # let's make the dds object then collapse the technical replicates -->
<!-- strain_dds_pm <- DESeqDataSetFromMatrix( countData = cts_pm, -->
<!--                                          colData = coldata_pm, -->
<!--                                          design = ~1) -->
<!-- strain_dds_coll_pm <- collapseReplicates(strain_dds_pm, strain_dds_pm$unique_sampleid) -->

<!-- # prep model wo interaction -->
<!-- strain_simple_model_pm <- model.matrix(~ strain + LB_stage + strain:ind, -->
<!--                                        data = colData(strain_dds_coll_pm)) -->
<!-- all.zero <- apply(strain_simple_model_pm, 2, function(x) all(x==0)) -->
<!-- idx <- which(all.zero) -->
<!-- strain_simple_model_pm <- strain_simple_model_pm[,-idx] -->
<!-- # strain_dds_simple_pm <- DESeq(strain_dds_coll_pm, betaPrior = FALSE, full=strain_simple_model_pm) -->

<!-- # prep model with interaction -->
<!-- strain_int_model_pm <- model.matrix(~ strain + LB_stage + strain:ind + strain:LB_stage, -->
<!--                                     data = colData(strain_dds_coll_pm)) -->
<!-- all.zero <- apply(strain_int_model_pm, 2, function(x) all(x==0)) -->
<!-- idx <- which(all.zero) -->
<!-- strain_int_model_pm <- strain_int_model_pm[,-idx] -->
<!-- strain_dds_int_pm <- DESeq(strain_dds_coll_pm, betaPrior = FALSE, full=strain_int_model_pm) # will get the logfold change + p values from this model -->

<!-- # run lrt -->
<!-- # comparing the full model with the interaction term between stage + domain to the reduced model without the interaction. -->
<!-- strain_dds_pm_lrt <- DESeq(strain_dds_coll_pm, test="LRT",  -->
<!--                                 full= strain_int_model_pm,  -->
<!--                                 reduced = strain_simple_model_pm) -->

<!-- # resultsNames(strain_dds_pm_lrt) -->
<!-- # Let's get the gene list that has a significant difference with/without the interaction term hence is likely to show an interaction effect! -->
<!-- strain_dds_pm_lrt_genes <- results( strain_dds_pm_lrt) %>%  -->
<!--   as_tibble( rownames = "gene_id") %>%  -->
<!--   filter( padj < 0.05) %>%  -->
<!--   left_join( all_genes_palate)  -->

<!-- # resultsNames(strain_dds_simple_pm) -->
<!-- # get gene counts -->
<!-- strain_dds_pm_gene_counts <- counts(strain_dds_int_pm, normalized=TRUE)[unique(strain_dds_pm_lrt_genes$gene_id),] %>% -->
<!--   as_tibble( rownames = "gene_id") %>% -->
<!--   pivot_longer(2:ncol(.), names_to = "sample", values_to = "count") %>% -->
<!--   left_join( -->
<!--     colData(strain_dds_int_pm) %>%  -->
<!--       as_tibble(rownames = "sample") %>%  -->
<!--       select(sample,strain, LB_stage, AP_domain) -->
<!--   ) -->

<!-- # max domain -->
<!-- # subset samples to max domain  -->
<!-- b6_cast_samples_max <- sample_annot %>% -->
<!--   filter(strain %in% c("B6","CAST")) %>% -->
<!--   filter( AP_domain == "MAX") %>%  -->
<!--   separate(sample, sep = "_", into = c("s","e","d","ind","rep"), remove = F) %>% -->
<!--   select(-e,-d) %>% -->
<!--   mutate( rep = ifelse( is.na(rep),1,rep)) %>% -->
<!--   unite( "unique_sampleid" , c(s,ind,AP_domain,Gest_stage),sep ="_", remove = F) -->
<!-- coldata_max <- b6_cast_samples_max %>% -->
<!--   select(sample,unique_sampleid, sex,ind, rep, AP_domain, Gest_stage, strain, LB_stage) %>% -->
<!--   #filter( rep ==1) %>% -->
<!--   filter(!is.na(sex) ) %>% -->
<!--   #mutate( AP_domain = factor(AP_domain, levels = c("PM","MAX","POST")) ) %>%  -->
<!--   column_to_rownames("sample") -->
<!-- cts_max <- round(raw_expr_mat[all_genes_palate$gene_id,rownames(coldata_max), drop = F]) -->
<!-- # let's make the dds object then collapse the technical replicates -->
<!-- strain_dds_max <- DESeqDataSetFromMatrix( countData = cts_max, -->
<!--                                          colData = coldata_max, -->
<!--                                          design = ~1) -->
<!-- strain_dds_coll_max <- collapseReplicates(strain_dds_max, strain_dds_max$unique_sampleid) -->

<!-- # prep model wo interaction -->
<!-- strain_simple_model_max <- model.matrix(~ strain + LB_stage + strain:ind, -->
<!--                                        data = colData(strain_dds_coll_max)) -->
<!-- all.zero <- apply(strain_simple_model_max, 2, function(x) all(x==0)) -->
<!-- idx <- which(all.zero) -->
<!-- strain_simple_model_max <- strain_simple_model_max[,-idx] -->
<!-- # strain_dds_simple_max <- DESeq(strain_dds_coll_max, betaPrior = FALSE, full=strain_simple_model_max) -->

<!-- # prep model with interaction -->
<!-- strain_int_model_max <- model.matrix(~ strain + LB_stage + strain:ind + strain:LB_stage, -->
<!--                                     data = colData(strain_dds_coll_max)) -->
<!-- all.zero <- apply(strain_int_model_max, 2, function(x) all(x==0)) -->
<!-- idx <- which(all.zero) -->
<!-- strain_int_model_max <- strain_int_model_max[,-idx] -->
<!-- strain_dds_int_max <- DESeq(strain_dds_coll_max, betaPrior = FALSE, full=strain_int_model_max) # will get the logfold change + p values from this model -->

<!-- # run lrt -->
<!-- # comparing the full model with the interaction term between stage + domain to the reduced model without the interaction. -->
<!-- strain_dds_max_lrt <- DESeq(strain_dds_coll_max, test="LRT",  -->
<!--                            full= strain_int_model_max,  -->
<!--                            reduced = strain_simple_model_max) -->

<!-- # resultsNames(strain_dds_max_lrt) -->
<!-- # Let's get the gene list that has a significant difference with/without the interaction term hence is likely to show an interaction effect! -->
<!-- strain_dds_max_lrt_genes <- results( strain_dds_max_lrt) %>%  -->
<!--   as_tibble( rownames = "gene_id") %>%  -->
<!--   filter( padj < 0.05) %>%  -->
<!--   left_join( all_genes_palate)  -->

<!-- # resultsNames(strain_dds_simple_max) -->
<!-- # get gene counts -->
<!-- strain_dds_max_gene_counts <- counts(strain_dds_int_max, normalized=TRUE)[unique(strain_dds_max_lrt_genes$gene_id),] %>% -->
<!--   as_tibble( rownames = "gene_id") %>% -->
<!--   pivot_longer(2:ncol(.), names_to = "sample", values_to = "count") %>% -->
<!--   left_join( -->
<!--     colData(strain_dds_int_max) %>%  -->
<!--       as_tibble(rownames = "sample") %>%  -->
<!--       select(sample,strain, LB_stage, AP_domain) -->
<!--   ) -->

<!-- # post domain -->
<!-- # subset samples to post domain  -->
<!-- b6_cast_samples_post <- sample_annot %>% -->
<!--   filter(strain %in% c("B6","CAST")) %>% -->
<!--   filter( AP_domain == "POST") %>%  -->
<!--   separate(sample, sep = "_", into = c("s","e","d","ind","rep"), remove = F) %>% -->
<!--   select(-e,-d) %>% -->
<!--   mutate( rep = ifelse( is.na(rep),1,rep)) %>% -->
<!--   unite( "unique_sampleid" , c(s,ind,AP_domain,Gest_stage),sep ="_", remove = F) -->
<!-- coldata_post <- b6_cast_samples_post %>% -->
<!--   select(sample,unique_sampleid, sex,ind, rep, AP_domain, Gest_stage, strain, LB_stage) %>% -->
<!--   #filter( rep ==1) %>% -->
<!--   filter(!is.na(sex) ) %>% -->
<!--   #mutate( AP_domain = factor(AP_domain, levels = c("PM","MAX","POST")) ) %>%  -->
<!--   column_to_rownames("sample") -->
<!-- cts_post <- round(raw_expr_mat[all_genes_palate$gene_id,rownames(coldata_post), drop = F]) -->
<!-- # let's make the dds object then collapse the technical replicates -->
<!-- strain_dds_post <- DESeqDataSetFromMatrix( countData = cts_post, -->
<!--                                          colData = coldata_post, -->
<!--                                          design = ~1) -->
<!-- strain_dds_coll_post <- collapseReplicates(strain_dds_post, strain_dds_post$unique_sampleid) -->

<!-- # prep model wo interaction -->
<!-- strain_simple_model_post <- model.matrix(~ strain + LB_stage + strain:ind, -->
<!--                                        data = colData(strain_dds_coll_post)) -->
<!-- all.zero <- apply(strain_simple_model_post, 2, function(x) all(x==0)) -->
<!-- idx <- which(all.zero) -->
<!-- strain_simple_model_post <- strain_simple_model_post[,-idx] -->
<!-- # strain_dds_simple_post <- DESeq(strain_dds_coll_post, betaPrior = FALSE, full=strain_simple_model_post) -->

<!-- # prep model with interaction -->
<!-- strain_int_model_post <- model.matrix(~ strain + LB_stage + strain:ind + strain:LB_stage, -->
<!--                                     data = colData(strain_dds_coll_post)) -->
<!-- all.zero <- apply(strain_int_model_post, 2, function(x) all(x==0)) -->
<!-- idx <- which(all.zero) -->
<!-- strain_int_model_post <- strain_int_model_post[,-idx] -->
<!-- strain_dds_int_post <- DESeq(strain_dds_coll_post, betaPrior = FALSE, full=strain_int_model_post) # will get the logfold change + p values from this model -->

<!-- # run lrt -->
<!-- # comparing the full model with the interaction term between stage + domain to the reduced model without the interaction. -->
<!-- strain_dds_post_lrt <- DESeq(strain_dds_coll_post, test="LRT",  -->
<!--                            full= strain_int_model_post,  -->
<!--                            reduced = strain_simple_model_post) -->

<!-- # resultsNames(strain_dds_post_lrt) -->
<!-- # Let's get the gene list that has a significant difference with/without the interaction term hence is likely to show an interaction effect! -->
<!-- strain_dds_post_lrt_genes <- results( strain_dds_post_lrt) %>%  -->
<!--   as_tibble( rownames = "gene_id") %>%  -->
<!--   filter( padj < 0.05) %>%  -->
<!--   left_join( all_genes_palate)  -->

<!-- # resultsNames(strain_dds_simple_post) -->
<!-- # get gene counts -->
<!-- strain_dds_post_gene_counts <- counts(strain_dds_int_post, normalized=TRUE)[unique(strain_dds_post_lrt_genes$gene_id),] %>% -->
<!--   as_tibble( rownames = "gene_id") %>% -->
<!--   pivot_longer(2:ncol(.), names_to = "sample", values_to = "count") %>% -->
<!--   left_join( -->
<!--     colData(strain_dds_int_post) %>%  -->
<!--       as_tibble(rownames = "sample") %>%  -->
<!--       select(sample,strain, LB_stage, AP_domain) -->
<!--   ) -->

<!-- ``` -->

<!-- ::: {.panel-tabset .nav-pills} -->
<!-- #### PM domain -->

<!-- ```{r strain_by_time_pm} -->
<!-- #| message: false -->
<!-- #| warning: false -->
<!-- #| cache: true -->


<!-- #  -->
<!-- # # the condition effect for genotype I (the main effect) -->
<!-- # results(dds, contrast=c("condition","B","A")) -->
<!-- #  -->
<!-- # # the condition effect for genotype II -->
<!-- # # this is, by definition, the main effect *plus* the interaction term -->
<!-- # # (the extra condition effect in genotype II compared to genotype I). -->
<!-- # results(dds, list( c("condition_B_vs_A","genotypeII.conditionB") )) -->
<!-- #  -->
<!-- # # the interaction term, answering: is the condition effect *different* across genotypes? -->
<!-- # results(dds, name="genotypeII.conditionB") -->


<!-- # get genes -->
<!-- strain_by_time_pm_genes <- results(strain_dds_int_post, contrast = list(c("strainCAST","strainCAST.LB_stage")) ) %>%  -->
<!--   as_tibble( rownames = "gene_id") %>%  -->
<!--   filter( gene_id %in% strain_dds_pm_lrt_genes$gene_id, -->
<!--           padj < 0.05,  -->
<!--           abs(log2FoldChange) > 0.5 -->
<!--           ) %>%  -->
<!--   mutate( -->
<!--     Comparison = ifelse( log2FoldChange >0, "Higher expression in CAST over time", "Lower expression in CAST over time") -->
<!--   ) %>%  -->
<!--   left_join(all_genes_palate) -->

<!-- # ora -->
<!-- g.strain_by_time_pm_up_genes <- gost( query = unique( (strain_by_time_pm_genes %>% -->
<!--                                                 filter(log2FoldChange > 0))$symbol), -->
<!--                            organism = "mmusculus", -->
<!--                            domain_scope = "custom", -->
<!--                            custom_bg = all_genes_palate$symbol, -->
<!--                            evcodes = TRUE -->
<!--                            ) -->
<!-- g.strain_by_time_pm_up_genes$result <- g.strain_by_time_pm_up_genes$result %>% filter(term_size < 660) -->


<!-- g.strain_by_time_pm_down_genes <- gost( query = unique( (strain_by_time_pm_genes %>% -->
<!--                                                 filter(log2FoldChange < 0))$symbol), -->
<!--                            organism = "mmusculus", -->
<!--                            domain_scope = "custom", -->
<!--                            custom_bg = all_genes_palate$symbol, -->
<!--                            evcodes = TRUE -->
<!--                            ) -->
<!-- g.strain_by_time_pm_down_genes$result <- g.strain_by_time_pm_down_genes$result %>% filter(term_size < 660) -->

<!-- ``` -->

<!-- ```{r strain_by_time_pm_plot} -->
<!-- #| warning: false -->
<!-- #| message: false -->
<!-- #| fig-width: 12 -->
<!-- #| fig-height: 5 -->

<!-- strain_by_time_pm_genes %>%  -->
<!--   select(gene_id, Comparison) %>% -->
<!--   left_join(strain_dds_pm_gene_counts) %>%  -->
<!--   ggplot()+ -->
<!--   aes(x = LB_stage, y = count, color = strain, group = strain) +  -->
<!--   geom_point() +  -->
<!--   stat_summary(aes(group=interaction(Comparison,strain)), fun = mean, geom="line", size = 1.2, alpha = 0.7)+ -->
<!--   scale_color_manual( values = strain_colors[1:2])+ -->
<!--   theme_pubclean()+ -->
<!--   ylab("Gene expression (raw counts)")+ -->
<!--   xlab("LB stage")+ -->
<!--   labs(color = "Strain")+ -->
<!--   scale_y_log10()+ -->
<!--   facet_wrap(~Comparison) -->


<!-- ``` -->

<!-- ```{r strain_by_time_pm_table} -->
<!-- #| message: false -->
<!-- #| warning: false -->

<!-- strain_by_time_pm_genes  %>% -->
<!--   select(Comparison, gene_id, symbol, chromosome , padj, log2FoldChange) %>% -->
<!--   mutate( padj = formatC(padj, digits = 2,format = "e"), -->
<!--           log2FoldChange = formatC(log2FoldChange, digits = 2, format = "g")) %>%  -->
<!--   create_dt() -->

<!-- ``` -->

<!-- ```{r strain_by_time_pm_ora_table} -->
<!-- #| message: false -->
<!-- #| warning: false -->

<!-- g.strain_by_time_pm_up_genes$result %>% -->
<!--   mutate( Category = "Higher expression in CAST over time") %>% -->
<!--   rbind( -->
<!--     g.strain_by_time_pm_down_genes$result %>% -->
<!--       mutate(Category = "Lower expression in CAST over time") -->
<!--   )  %>% -->
<!--   select( Category, term_name, source, p_value, term_size, intersection_size,intersection) %>%  # intersecion: adding the list of genes identified as overlapping with each category -->
<!--   mutate_if( is.numeric, formatC, digits =2) %>% -->
<!--   create_dt() -->

<!-- ``` -->

<!-- #### MAX domain -->

<!-- ```{r strain_by_time_max} -->
<!-- #| message: false -->
<!-- #| warning: false -->
<!-- #| cache: true -->


<!-- # get genes -->
<!-- strain_by_time_max_genes <- results(strain_dds_int_post, contrast = list(c("strainCAST","strainCAST.LB_stage")) ) %>%  -->
<!--   as_tibble( rownames = "gene_id") %>%  -->
<!--   filter( gene_id %in% strain_dds_max_lrt_genes$gene_id, -->
<!--           padj < 0.05,  -->
<!--           abs(log2FoldChange) > 0.5 -->
<!--   ) %>%  -->
<!--   mutate( -->
<!--     Comparison = ifelse( log2FoldChange >0, "Higher expression in CAST over time", "Lower expression in CAST over time") -->
<!--   ) %>%  -->
<!--   left_join(all_genes_palate) -->

<!-- # ora -->
<!-- g.strain_by_time_max_up_genes <- gost( query = unique( (strain_by_time_max_genes %>% -->
<!--                                                          filter(log2FoldChange > 0))$symbol), -->
<!--                                       organism = "mmusculus", -->
<!--                                       domain_scope = "custom", -->
<!--                                       custom_bg = all_genes_palate$symbol, -->
<!--                                       evcodes = TRUE -->
<!-- ) -->
<!-- if( length(g.strain_by_time_max_up_genes$result) != 0) g.strain_by_time_max_up_genes$result <- g.strain_by_time_max_up_genes$result %>% filter(term_size < 660) -->


<!-- g.strain_by_time_max_down_genes <- gost( query = unique( (strain_by_time_max_genes %>% -->
<!--                                                            filter(log2FoldChange < 0))$symbol), -->
<!--                                         organism = "mmusculus", -->
<!--                                         domain_scope = "custom", -->
<!--                                         custom_bg = all_genes_palate$symbol, -->
<!--                                         evcodes = TRUE -->
<!-- ) -->
<!-- g.strain_by_time_max_down_genes$result <- g.strain_by_time_max_down_genes$result %>% filter(term_size < 660) -->

<!-- ``` -->

<!-- ```{r strain_by_time_max_plot} -->
<!-- #| warning: false -->
<!-- #| message: false -->
<!-- #| fig-width: 12 -->
<!-- #| fig-height: 5 -->

<!-- strain_by_time_max_genes %>%  -->
<!--   select(gene_id, Comparison) %>% -->
<!--   left_join(strain_dds_max_gene_counts) %>%  -->
<!--   ggplot()+ -->
<!--   aes(x = LB_stage, y = count, color = strain, group = strain) +  -->
<!--   geom_point() +  -->
<!--   stat_summary(aes(group=interaction(Comparison,strain)), fun = mean, geom="line", size = 1.2, alpha = 0.7)+ -->
<!--   scale_color_manual( values = strain_colors[1:2])+ -->
<!--   theme_pubclean()+ -->
<!--   ylab("Gene expression (raw counts)")+ -->
<!--   xlab("LB stage")+ -->
<!--   labs(color = "Strain")+ -->
<!--   scale_y_log10()+ -->
<!--   facet_wrap(~Comparison) -->


<!-- ``` -->

<!-- ```{r strain_by_time_max_table} -->
<!-- #| message: false -->
<!-- #| warning: false -->

<!-- strain_by_time_max_genes  %>% -->
<!--   select(Comparison, gene_id, symbol, chromosome , padj, log2FoldChange) %>% -->
<!--   mutate( padj = formatC(padj, digits = 2,format = "e"), -->
<!--           log2FoldChange = formatC(log2FoldChange, digits = 2, format = "g")) %>%  -->
<!--   create_dt() -->

<!-- ``` -->

<!-- ```{r strain_by_time_max_ora_table} -->
<!-- #| message: false -->
<!-- #| warning: false -->

<!-- # g.strain_by_time_max_up_genes$result %>% -->
<!-- #   mutate( Category = "Higher expression in CAST over time") %>% -->
<!-- #   rbind( -->
<!-- g.strain_by_time_max_down_genes$result %>% -->
<!--   mutate(Category = "Higher expression in CAST over time") %>% -->
<!--   select( Category, term_name, source, p_value, term_size, intersection_size,intersection) %>%  # intersecion: adding the list of genes identified as overlapping with each category -->
<!--   mutate_if( is.numeric, formatC, digits =2) %>% -->
<!--   create_dt() -->

<!-- ``` -->

<!-- #### POST domain -->

<!-- ```{r strain_by_time_post} -->
<!-- #| message: false -->
<!-- #| warning: false -->
<!-- #| cache: true -->


<!-- # get genes -->
<!-- strain_by_time_post_genes <- results(strain_dds_int_post, contrast = list(c("strainCAST","strainCAST.LB_stage")) ) %>%  -->
<!--   as_tibble( rownames = "gene_id") %>%  -->
<!--   filter( gene_id %in% strain_dds_post_lrt_genes$gene_id, -->
<!--           padj < 0.05,  -->
<!--           abs(log2FoldChange) > 0.5 -->
<!--   ) %>%  -->
<!--   mutate( -->
<!--     Comparison = ifelse( log2FoldChange >0, "Higher expression in CAST over time", "Lower expression in CAST over time") -->
<!--   ) %>%  -->
<!--   left_join(all_genes_palate) -->

<!-- # ora -->
<!-- g.strain_by_time_post_up_genes <- gost( query = unique( (strain_by_time_post_genes %>% -->
<!--                                                          filter(log2FoldChange > 0))$symbol), -->
<!--                                       organism = "mmusculus", -->
<!--                                       domain_scope = "custom", -->
<!--                                       custom_bg = all_genes_palate$symbol, -->
<!--                                       evcodes = TRUE -->
<!-- ) -->
<!-- g.strain_by_time_post_up_genes$result <- g.strain_by_time_post_up_genes$result %>% filter(term_size < 660) -->


<!-- g.strain_by_time_post_down_genes <- gost( query = unique( (strain_by_time_post_genes %>% -->
<!--                                                            filter(log2FoldChange < 0))$symbol), -->
<!--                                         organism = "mmusculus", -->
<!--                                         domain_scope = "custom", -->
<!--                                         custom_bg = all_genes_palate$symbol, -->
<!--                                         evcodes = TRUE -->
<!-- ) -->
<!-- g.strain_by_time_post_down_genes$result <- g.strain_by_time_post_down_genes$result %>% filter(term_size < 660) -->

<!-- ``` -->

<!-- ```{r strain_by_time_post_plot} -->
<!-- #| warning: false -->
<!-- #| message: false -->
<!-- #| fig-width: 12 -->
<!-- #| fig-height: 5 -->

<!-- strain_by_time_post_genes %>%  -->
<!--   select(gene_id, Comparison) %>% -->
<!--   left_join(strain_dds_post_gene_counts) %>%  -->
<!--   ggplot()+ -->
<!--   aes(x = LB_stage, y = count, color = strain, group = strain) +  -->
<!--   geom_point() +  -->
<!--   stat_summary(aes(group=interaction(Comparison,strain)), fun = mean, geom="line", size = 1.2, alpha = 0.7)+ -->
<!--   scale_color_manual( values = strain_colors[1:2])+ -->
<!--   theme_pubclean()+ -->
<!--   ylab("Gene expression (raw counts)")+ -->
<!--   xlab("LB stage")+ -->
<!--   labs(color = "Strain")+ -->
<!--   scale_y_log10()+ -->
<!--   facet_wrap(~Comparison) -->


<!-- ``` -->

<!-- ```{r strain_by_time_post_table} -->
<!-- #| message: false -->
<!-- #| warning: false -->

<!-- strain_by_time_post_genes  %>% -->
<!--   select(Comparison, gene_id, symbol, chromosome , padj, log2FoldChange) %>% -->
<!--   mutate( padj = formatC(padj, digits = 2,format = "e"), -->
<!--           log2FoldChange = formatC(log2FoldChange, digits = 2, format = "g")) %>%  -->
<!--   create_dt() -->

<!-- ``` -->

<!-- ```{r strain_by_time_post_ora_table} -->
<!-- #| message: false -->
<!-- #| warning: false -->

<!-- g.strain_by_time_post_up_genes$result %>% -->
<!--   mutate( Category = "Higher expression in CAST over time") %>% -->
<!--   rbind( -->
<!--     g.strain_by_time_post_down_genes$result %>% -->
<!--       mutate(Category = "Lower expression in CAST over time") -->
<!--   )  %>% -->
<!--   select( Category, term_name, source, p_value, term_size, intersection_size,intersection) %>%  # intersecion: adding the list of genes identified as overlapping with each category -->
<!--   mutate_if( is.numeric, formatC, digits =2) %>% -->
<!--   create_dt() -->

<!-- ``` -->
<!-- ::: -->
<!-- ::: -->

<!-- # Weighted gene co-expression network analysis -->

<!-- ```{r prep_for_wgcna} -->
<!-- #| warning: false -->
<!-- #| message: false -->

<!-- coldata <- b6_cast_samples %>% -->
<!--   select(sample,unique_sampleid, sex,ind, rep, AP_domain, Gest_stage, strain, LB_stage) %>% -->
<!--   #filter( rep ==1) %>% -->
<!--   filter(!is.na(sex) ) %>% -->
<!--   mutate( AP_domain = factor(AP_domain, levels = c("PM","MAX","POST")) ) %>%  -->
<!--   column_to_rownames("sample") -->

<!-- datExpr <- t(expr_mat[all_genes_palate$gene_id,rownames(coldata), drop = F]) -->

<!-- datTraits <- sample_annot %>% -->
<!--   filter( sample %in% rownames(coldata)) %>%  -->
<!--   select(sample, sex, LB_stage, palate_closure) %>%  -->
<!--   mutate( sex = ifelse(sex == "M", 0, 1),  -->
<!--           palate_closure=case_when( -->
<!--             is.na(palate_closure)~0, -->
<!--             palate_closure =="vertical"~1, -->
<!--             palate_closure =="mid"~2, -->
<!--             palate_closure =="late"~3, -->
<!--             palate_closure =="elevated"~4, -->
<!--             palate_closure =="closed"~5, -->
<!--             palate_closure =="early"~6 -->
<!--           )) %>%  -->
<!--   column_to_rownames("sample") -->

<!-- ``` -->

<!-- ```{r run_wgcna} -->
<!-- #| warning: false -->
<!-- #| message: false -->
<!-- #| cache: true -->
<!-- #| results: hide -->

<!-- # # Choose a set of soft-thresholding powers -->
<!-- # powers = c(c(1:10), seq(from = 12, to=20, by=2)) -->
<!-- # # Call the network topology analysis function -->
<!-- # sft = pickSoftThreshold(datExpr, powerVector = powers, verbose = 5) -->
<!-- # # Plot the results: -->
<!-- # sizeGrWindow(9, 5) -->
<!-- # par(mfrow = c(1,2)); -->
<!-- # cex1 = 0.9; -->
<!-- # # Scale-free topology fit index as a function of the soft-thresholding power -->
<!-- # plot(sft$fitIndices[,1], -sign(sft$fitIndices[,3])*sft$fitIndices[,2], -->
<!-- # xlab="Soft Threshold (power)",ylab="Scale Free Topology Model Fit,signed R^2",type="n", -->
<!-- # main = paste("Scale independence")); -->
<!-- # text(sft$fitIndices[,1], -sign(sft$fitIndices[,3])*sft$fitIndices[,2], -->
<!-- # labels=powers,cex=cex1,col="red"); -->
<!-- # # this line corresponds to using an R^2 cut-off of h -->
<!-- # abline(h=0.90,col="red") -->
<!-- # # Mean connectivity as a function of the soft-thresholding power -->
<!-- # plot(sft$fitIndices[,1], sft$fitIndices[,5], -->
<!-- # xlab="Soft Threshold (power)",ylab="Mean Connectivity", type="n", -->
<!-- # main = paste("Mean connectivity")) -->
<!-- # text(sft$fitIndices[,1], sft$fitIndices[,5], labels=powers, cex=cex1,col="red") -->

<!-- # using the recommended power = 12 for signed networks -->
<!-- # using log1p transformed data following recommendations here: https://horvath.genetics.ucla.edu/html/CoexpressionNetwork/Rpackages/WGCNA/faq.html -->
<!-- net = blockwiseModules( log1p(datExpr),  -->
<!--                        power = 12, -->
<!--                        networkType = "signed", -->
<!--                        TOMType = "signed",  -->
<!--                        minModuleSize = 30, -->
<!--                        reassignThreshold = 0,  -->
<!--                        mergeCutHeight = 0.25, -->
<!--                        deepSplit = 2,  -->
<!--                        numericLabels = TRUE,  -->
<!--                        pamRespectsDendro = FALSE, -->
<!--                        maxBlockSize = 10000, -->
<!--                        verbose = 3) -->


<!-- ``` -->

<!-- ```{r wgcna_modules} -->
<!-- #| warning: false -->
<!-- #| message: false -->
<!-- #| results: hide -->


<!-- # open a graphics window -->
<!-- sizeGrWindow(12, 9) -->
<!-- # Convert labels to colors for plotting -->
<!-- mergedColors = labels2colors(net$colors) -->
<!-- # Plot the dendrogram and the module colors underneath -->
<!-- plotDendroAndColors(net$dendrograms[[1]], mergedColors[net$blockGenes[[1]]], -->
<!-- "Module colors", -->
<!-- dendroLabels = FALSE, hang = 0.03, -->
<!-- addGuide = TRUE, guideHang = 0.05) -->

<!-- ``` -->

<!-- ```{r wgcna_module_characterization} -->
<!-- #| message: false -->
<!-- #| warning: false -->
<!-- #| cache: true -->


<!-- ## Trait correlations -->
<!-- # Define numbers of genes and samples -->
<!-- nGenes = ncol(datExpr) -->
<!-- nSamples = nrow(datExpr) -->
<!-- # Recalculate MEs with color labels -->
<!-- moduleColors = labels2colors(net$colors) -->
<!-- MEs0 = moduleEigengenes(datExpr, moduleColors)$eigengenes -->
<!-- MEs = orderMEs(MEs0) -->

<!-- moduleTraitCor = cor(MEs, datTraits, use = "p") -->
<!-- moduleTraitPvalue = corPvalueStudent(moduleTraitCor, nSamples) -->

<!-- ## ORA for each module -->
<!-- modules = unique(labels2colors(net$colors)) -->
<!-- ora_results <- c() -->
<!-- for( mod in modules){ -->
<!--   modGenes = all_genes_palate[all_genes_palate$gene_id %in% colnames(datExpr)[(moduleColors==mod)],]$symbol -->
<!--   g.mod <- gost(query =  unique(modGenes), -->
<!--                         organism = "mmusculus", -->
<!--                         domain_scope = "custom", -->
<!--                         custom_bg = all_genes_palate$symbol, -->
<!--                         evcodes = TRUE) -->
<!--   ora_results[[mod]] <- g.mod -->
<!-- } -->

<!-- ``` -->

<!-- ::: {#WGCNA_results .panel-tabset .nav-pills} -->
<!-- ### Module-trait correlations -->

<!-- ```{r wgcna_trait_cor} -->
<!-- #| message: false -->
<!-- #| warning: false -->
<!-- #| fig-width: 12 -->
<!-- #| fig-height: 6 -->
<!-- corrplot(moduleTraitCor, p.mat = moduleTraitPvalue, insig = "label_sig", pch.cex = 1.1, pch.col = "red", -->
<!--          rder = 'AOE', cl.pos = 'n',  -->
<!--          col = COL2('PRGn')) -->
<!-- colorlegend(xlim=c(6,8), ylim=c(2,12), COL2('PRGn'), c(seq(-1,1,.5)), align="l", vertical=TRUE, addlabels=TRUE) -->

<!-- ``` -->

<!-- ### ORA results for modules -->

<!-- ```{r wgcna_ora_restuls_table} -->

<!-- do.call( rbind, ora_results) %>%  -->
<!--   as_tibble(rownames = "module") %>%  -->
<!--   select(-meta) %>%  -->
<!--   unnest("result") %>%  -->
<!--   select(module,  term_name, source, FDR = p_value, term_size, intersection_size,intersection) %>%  -->
<!--     filter( FDR <0.01, term_size < 500) %>%  -->
<!--   mutate_if( is.numeric, formatC, digits =2) %>%  -->
<!--   create_dt() -->


<!-- ``` -->
<!-- ::: -->
